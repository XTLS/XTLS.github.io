import{_ as i,r as p,o as l,c as u,a as n,b as s,d as e,w as t,e as a}from"./app-8X5BFfQW.js";const r={},d=a(`<h1 id="freedom" tabindex="-1"><a class="header-anchor" href="#freedom"><span>Freedom</span></a></h1><p>Freedom is an outbound protocol that can be used to send (normal) TCP or UDP data to any network.</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject"><span>OutboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;redirect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:3366&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;packets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tlshello&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100-200&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;interval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10-20&quot;</span> <span class="token comment">// ms</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;noises&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;base64&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;packet&quot;</span><span class="token operator">:</span><span class="token string">&quot;7nQBAAABAAAAAAAABnQtcmluZwZtc2VkZ2UDbmV0AAABAAE=&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delay&quot;</span><span class="token operator">:</span><span class="token string">&quot;10-16&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;rand&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;packet&quot;</span><span class="token operator">:</span><span class="token string">&quot;10-20&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delay&quot;</span><span class="token operator">:</span><span class="token string">&quot;10-16&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;str&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;packet&quot;</span><span class="token operator">:</span><span class="token string">&quot;hiGFW&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delay&quot;</span><span class="token operator">:</span><span class="token string">&quot;10-16&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;proxyProtocol&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>domainStrategy</code>: &quot;AsIs&quot; | &quot;UseIP&quot; | &quot;UseIPv4&quot; | &quot;UseIPv6&quot;</p></blockquote><p>When the destination address is a domain name, configure the corresponding value for Freedom&#39;s behavior:</p>`,6),q=s("li",null,[s("code",null,'"AsIs"'),e(": Freedom resolves the domain name using the system DNS server and connects to it.")],-1),k=s("code",null,'"UseIP"',-1),m=s("code",null,'"UseIPv4"',-1),v=s("code",null,'"UseIPv6"',-1),h=s("code",null,'"AsIs"',-1),b={class:"custom-container tip"},f=s("p",{class:"custom-container-title"},"TIP 1",-1),g=s("code",null,'"UseIP"',-1),y=s("code",null,"sendThrough",-1),_=s("code",null,"sendThrough",-1),I=a('<div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>When using the <code>&quot;UseIPv4&quot;</code> or <code>&quot;UseIPv6&quot;</code> mode, Freedom will only use the corresponding IPv4 or IPv6 address. If <code>sendThrough</code> specifies a mismatched local address, the connection will fail.</p></div><blockquote><p><code>redirect</code>: address_port</p></blockquote><p>Freedom will force all data to be sent to the specified address (instead of the address specified in the inbound).</p><p>It is a string value, for example: <code>&quot;127.0.0.1:80&quot;</code>, <code>&quot;:1234&quot;</code>.</p><p>When the address is not specified, such as <code>&quot;:443&quot;</code>, Freedom will not modify the original destination address. When the port is <code>0</code>, such as <code>&quot;xray.com:0&quot;</code>, Freedom will not modify the original port.</p><blockquote><p><code>userLevel</code>: number</p></blockquote>',6),P=s("code",null,"userLevel",-1),A=s("code",null,"level",-1),w=a('<blockquote><p><code>fragment</code>: map</p></blockquote><p>A key-value map used to control TCP fragmentation，under some circumstances it can cheat the censor system, like bypass a SNI blacklist.</p><p><code>&quot;packets&quot;</code>：support two different methods. &quot;1-3&quot; is for segmentation at TCP layer, applying to the beginning 1 to 3 data writes by the client. &quot;tlshello&quot; is for TLS client hello packet fragmentation.</p><p><code>&quot;length&quot;</code>: length to make the cut</p><p><code>&quot;interval&quot;</code>: time between fragments（ms）</p><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>⚠️ &quot;noise&quot;:{} is deptecated,only &quot;noises&quot;:[{}] is supported in 24.9.16 and later</p></div><blockquote><p><code>noises</code>: [ noiseObject ]</p></blockquote><p>A Array used to control UDP noise，under some circumstances it can bypass some udp based protocol restrictions. xray will loop through this array and send each noise packet one by one</p><p><code>&quot;type&quot;</code>：Three types are supported. &quot;rand&quot; generates a random byte , &quot;str&quot; uses a user input string, &quot;base64&quot; uses a user input base64 encoded string</p><p><code>&quot;packet&quot;</code>：If type is set to &quot;rand&quot; this field will take a range &quot;50-100&quot; or a single value &quot;50&quot;</p><p>if type is set to &quot;str&quot; this field will take a string</p><p>if type is set to &quot;base64&quot; this field will take a base64 encoded string</p><p><code>&quot;delay&quot;</code>：delay before sending real data (ms). can be a string range like &quot;10-20&quot; or a single integer</p><p>If not specified, the default value is 0.</p><blockquote><p><code>proxyProtocol</code>: number</p></blockquote><p>The value of <code>proxyProtocol</code> represents the PROXY Protocol version. default value is <code>0</code>.</p>',16);function T(x,U){const c=p("I18nTip"),o=p("RouterLink");return l(),u("div",null,[n(c),d,s("ul",null,[q,s("li",null,[k,e(", "),m,e(", and "),v,e(": Xray resolves the domain name using the built-in "),n(o,{to:"/en/config/dns.html"},{default:t(()=>[e("DNS server")]),_:1}),e(" and connects to it. The default value is "),h,e(".")])]),s("div",b,[f,s("p",null,[e("When using the "),g,e(" mode and the "),y,e(" field is specified in the "),n(o,{to:"/en/config/outbound.html#outboundobject"},{default:t(()=>[e("outbound connection configuration")]),_:1}),e(", Freedom will automatically determine the required IP type, IPv4 or IPv6, based on the value of "),_,e(".")])]),I,s("p",null,[e("User level. The connection will use the corresponding "),n(o,{to:"/en/config/policy.html#levelpolicyobject"},{default:t(()=>[e("local policy")]),_:1}),e(" for this user level.")]),s("p",null,[e("The value of "),P,e(" corresponds to the value of "),A,e(" in the "),n(o,{to:"/en/config/policy.html#policyobject"},{default:t(()=>[e("policy")]),_:1}),e(". If not specified, the default value is 0.")]),w])}const F=i(r,[["render",T],["__file","freedom.html.vue"]]);export{F as default};
