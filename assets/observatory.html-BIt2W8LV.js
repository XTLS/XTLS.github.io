import{_ as e,r as n,o as s,c as t,a,e as c}from"./app-D86FZucm.js";const p={},u=c(`<h1 id="мониторинг-подключении" tabindex="-1"><a class="header-anchor" href="#мониторинг-подключении"><span>Мониторинг подключений</span></a></h1><p>Компонент мониторинга подключений использует HTTP-пинги для проверки состояния подключения исходящих прокси. Результаты мониторинга могут использоваться другими компонентами, например, балансировщиком нагрузки.<br> В настоящее время доступны два режима: <a href="#observatoryobject">observatory</a> (фоновый мониторинг подключений) и <a href="#burstobservatoryobject">burstObservatory</a> (мониторинг параллельных подключений).<br> Выберите один из них в соответствии с вашими потребностями.</p><h2 id="observatoryobject" tabindex="-1"><a class="header-anchor" href="#observatoryobject"><span>ObservatoryObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;subjectSelector&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token string">&quot;outbound&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;probeUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://www.google.com/generate_204&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;probeInterval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10s&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;enableConcurrency&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>subjectSelector</code>: [ string ]</p></blockquote><p>Массив строк, каждый элемент которого будет использоваться для сопоставления с префиксом тега исходящего подключения.<br> Например, для следующих тегов исходящих подключений: <code>[ &quot;a&quot;, &quot;ab&quot;, &quot;c&quot;, &quot;ba&quot; ]</code>, <code>&quot;subjectSelector&quot;: [&quot;a&quot;]</code> будет соответствовать <code>[ &quot;a&quot;, &quot;ab&quot; ]</code>.</p><blockquote><p><code>probeUrl</code>: string</p></blockquote><p>URL-адрес, используемый для проверки состояния подключения исходящего прокси.</p><blockquote><p><code>probeInterval</code>: string</p></blockquote><p>Интервал между проверками.<br> Формат времени: число + единица измерения, например <code>&quot;10s&quot;</code>, <code>&quot;2h45m&quot;</code>.<br> Поддерживаемые единицы измерения: <code>ns</code>, <code>us</code>, <code>ms</code>, <code>s</code>, <code>m</code>, <code>h</code> (наносекунды, микросекунды, миллисекунды, секунды, минуты, часы).</p><blockquote><p><code>enableConcurrency</code>: true | false</p></blockquote><ul><li><code>true</code> - проверять все соответствующие исходящие прокси одновременно, после чего сделать паузу на время, указанное в <code>probeInterval</code>.</li><li><code>false</code> - проверять соответствующие исходящие прокси по очереди, делая паузу на время, указанное в <code>probeInterval</code>, после проверки каждого прокси.</li></ul><h2 id="burstobservatoryobject" tabindex="-1"><a class="header-anchor" href="#burstobservatoryobject"><span>BurstObservatoryObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;subjectSelector&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token string">&quot;outbound&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pingConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>subjectSelector</code>: [ string ]</p></blockquote><p>Массив строк, каждый элемент которого будет использоваться для сопоставления с префиксом тега исходящего подключения.<br> Например, для следующих тегов исходящих подключений: <code>[ &quot;a&quot;, &quot;ab&quot;, &quot;c&quot;, &quot;ba&quot; ]</code>, <code>&quot;subjectSelector&quot;: [&quot;a&quot;]</code> будет соответствовать <code>[ &quot;a&quot;, &quot;ab&quot; ]</code>.</p><blockquote><p><code>pingConfig</code>: <a href="#PingConfigObject">PingConfigObject</a></p></blockquote><h3 id="pingconfigobject" tabindex="-1"><a class="header-anchor" href="#pingconfigobject"><span>PingConfigObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;destination&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://connectivitycheck.gstatic.com/generate_204&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;connectivity&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;interval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1h&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sampling&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token string">&quot;30s&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>destination</code>: string</p></blockquote><p>URL-адрес, используемый для проверки состояния подключения исходящего прокси.<br> Этот URL-адрес должен возвращать код состояния HTTP 204.</p><blockquote><p><code>connectivity</code>: string</p></blockquote><p>URL-адрес, используемый для проверки подключения к локальной сети.<br> Пустая строка означает, что проверка подключения к локальной сети не выполняется.</p><blockquote><p><code>interval</code>: string</p></blockquote><p>Проверить все соответствующие исходящие прокси в течение указанного времени, отправляя <code>sampling</code> + 1 запросов на каждый прокси.<br> Формат времени: число + единица измерения, например <code>&quot;10s&quot;</code>, <code>&quot;2h45m&quot;</code>.<br> Поддерживаемые единицы измерения: <code>ns</code>, <code>us</code>, <code>ms</code>, <code>s</code>, <code>m</code>, <code>h</code> (наносекунды, микросекунды, миллисекунды, секунды, минуты, часы).</p><blockquote><p><code>sampling</code>: number</p></blockquote><p>Количество последних результатов проверок, которые нужно сохранить.</p><blockquote><p><code>timeout</code>: string</p></blockquote><p>Время ожидания ответа при проверке.<br> Формат такой же, как и у <code>interval</code>.</p>`,29);function r(l,i){const o=n("I18nTip");return s(),t("div",null,[a(o),u])}const b=e(p,[["render",r],["__file","observatory.html.vue"]]);export{b as default};
