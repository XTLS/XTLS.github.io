import{_ as l,r as t,o as r,c as u,a as o,b as s,d as n,w as e,e as p}from"./app-BClOOpdM.js";const d={},i=p(`<h1 id="dokodemo-door" tabindex="-1"><a class="header-anchor" href="#dokodemo-door"><span>Dokodemo-Door</span></a></h1><p>Dokodemo door（任意门）可以监听一个本地端口，并把所有进入此端口的数据发送至指定服务器的一个端口，从而达到端口映射的效果。</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>将流量转发到此地址。可以是一个 IP 地址，形如 <code>&quot;1.2.3.4&quot;</code>，或者一个域名，形如 <code>&quot;xray.com&quot;</code>。字符串类型。</p><p>当 <code>followRedirect</code>（见下文）为 <code>true</code> 时，<code>address</code> 可为空。</p><blockquote><p><code>port</code>: number</p></blockquote><p>将流量转发到目标地址的指定端口，范围 [1, 65535]，数值类型。必填参数。</p><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot; | &quot;tcp,udp&quot;</p></blockquote><p>可接收的网络协议类型。比如当指定为 <code>&quot;tcp&quot;</code> 时，仅会接收 TCP 流量。默认值为 <code>&quot;tcp&quot;</code>。</p><blockquote><p><code>followRedirect</code>: true | false</p></blockquote><p>当值为 <code>true</code> 时，dokodemo-door 会识别出由 iptables 转发而来的数据，并转发到相应的目标地址。</p>`,13),k=s("code",null,"tproxy",-1),q=s("blockquote",null,[s("p",null,[s("code",null,"userLevel"),n(": number")])],-1),v=s("code",null,"level",-1),m=p(`<h2 id="用处" tabindex="-1"><a class="header-anchor" href="#用处"><span>用处</span></a></h2><p>任意门主要有两个用处 一个是用作透明代理(见下)，另一个是映射一个端口。</p><p>有时一些服务并不支持使用 Socks5 这样的正向代理，使用 Tun 或者 Tproxy 又有些小题大做了，而这些服务又只和一个 IP 一个端口通信 (比如: iperf, Minecraft server, Wireguard endpoint), 就可以用到任意门。</p><p>如以下 Config (假设默认出站为一有效代理)</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">25565</span><span class="token punctuation">,</span>
  <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dokodemo-door&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mc.hypixel.net&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">25565</span><span class="token punctuation">,</span>
    <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mc&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时候核心会监听 127.0.0.1:25565 并通过默认出站转发至 mc.hypixel.net:25565 (一个MC服务器), 这时候再通过 Minecraft 客户端连接 127.0.0.1:25565, 就相当于通过代理连接了 Hypixel 服务器。</p><h2 id="透明代理配置样例" tabindex="-1"><a class="header-anchor" href="#透明代理配置样例"><span>透明代理配置样例</span></a></h2><p>此部分请参考<a href="../../document/level-2/tproxy">透明代理（TProxy）配置教程</a>。</p>`,8);function b(h,f){const c=t("I18nTip"),a=t("RouterLink");return r(),u("div",null,[o(c),i,s("p",null,[n("可参考 "),o(a,{to:"/config/transport.html#sockoptobject"},{default:e(()=>[n("传输配置")]),_:1}),n(" 中的 "),k,n(" 设置。")]),q,s("p",null,[n("用户等级，连接会使用这个用户等级对应的 "),o(a,{to:"/config/policy.html#levelpolicyobject"},{default:e(()=>[n("本地策略")]),_:1}),n("。")]),s("p",null,[n("userLevel 的值, 对应 "),o(a,{to:"/config/policy.html#policyobject"},{default:e(()=>[n("policy")]),_:1}),n(" 中 "),v,n(" 的值. 如不指定, 默认为 0。")]),m])}const y=l(d,[["render",b],["__file","dokodemo.html.vue"]]);export{y as default};
