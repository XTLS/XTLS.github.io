import{_ as p,r as e,o as d,c as u,a as s,b as o,d as n,w as r,e as l}from"./app-C1ZSQDOJ.js";const i={},k=o("h1",{id:"dns",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#dns"},[o("span",null,"DNS")])],-1),q=o("p",null,"DNS — это исходящий протокол, который в основном используется для перехвата и пересылки DNS-запросов.",-1),b=o("p",null,"Этот исходящий протокол может принимать только DNS-трафик (включая запросы по протоколам UDP и TCP), другие типы трафика вызовут ошибку.",-1),_=o("code",null,"nonIPQuery",-1),h=l(`<h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject"><span>OutboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.1.1.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nonIPQuery&quot;</span><span class="token operator">:</span> <span class="token string">&quot;drop&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;blockTypes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot;</p></blockquote><p>Изменяет транспортный протокол DNS-трафика. Допустимые значения: <code>&quot;tcp&quot;</code> и <code>&quot;udp&quot;</code>. Если не указано, используется исходный транспортный протокол.</p><blockquote><p><code>address</code>: address</p></blockquote><p>Изменяет адрес DNS-сервера. Если не указано, используется адрес, указанный в источнике.</p><blockquote><p><code>port</code>: number</p></blockquote><p>Изменяет порт DNS-сервера. Если не указано, используется порт, указанный в источнике.</p><blockquote><p><code>nonIPQuery</code>: string</p></blockquote><p>Управляет запросами, не относящимися к IP-адресам (не A и AAAA). <code>&quot;drop&quot;</code> — отклонять, <code>&quot;skip&quot;</code> — не обрабатывать встроенным DNS-сервером, а пересылать на целевой сервер. Значение по умолчанию — <code>&quot;drop&quot;</code>.</p><blockquote><p><code>blockTypes</code>: array</p></blockquote><p>Массив целых чисел, блокирующий типы запросов, указанные в массиве. Например, <code>&quot;blockTypes&quot;:[65,28]</code> блокирует запросы типа 65 (HTTPS) и 28 (AAAA).</p><p>Поскольку <code>nonIPQuery</code> по умолчанию отклоняет все запросы, не относящиеся к A и AAAA, необходимо установить для него значение <code>skip</code>, чтобы этот параметр заработал. Конечно, можно и не менять, а использовать его только для блокировки запросов A или AAAA, чтобы блокировать запросы IPv4/IPv6, но это крайне не рекомендуется. Рекомендуется настроить соответствующие параметры в <code>queryStrategy</code> встроенного DNS-сервера.</p>`,13),A={id:"примеры-конфигурации-dns",tabindex:"-1"},m={class:"header-anchor",href:"#примеры-конфигурации-dns"};function v(g,y){const t=e("I18nTip"),a=e("RouterLink"),c=e("Badge");return d(),u("div",null,[s(t),k,q,b,o("p",null,[n("При обработке DNS-запросов этот исходящий протокол пересылает запросы IP-адресов (то есть A и AAAA) на встроенный "),s(a,{to:"/ru/config/dns.html"},{default:r(()=>[n("DNS-сервер")]),_:1}),n(". Другие типы запросов см. в разделе "),_,n(" ниже.")]),h,o("h2",A,[o("a",m,[o("span",null,[n("Примеры конфигурации DNS "),s(c,{text:"В РАЗРАБОТКЕ",type:"warning"})])])])])}const f=p(i,[["render",v],["__file","dns.html.vue"]]);export{f as default};
