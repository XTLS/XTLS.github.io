import{_ as p,r as t,o as r,c as l,a as o,b as e,d as n,w as a,e as c}from"./app-C6BCwY0t.js";const u={},d=c(`<h1 id="http" tabindex="-1"><a class="header-anchor" href="#http"><span>HTTP</span></a></h1><p>HTTP protocol.</p><div class="custom-container warning"><p class="custom-container-title">Warning</p><p><strong>The HTTP protocol does not provide encryption for transmission and is not suitable for transmission over public networks, as it can easily be used as a target for attacks.</strong></p></div><p>The more meaningful use of <code>http</code> inbound is to listen in a local network or on the local machine to provide local services for other programs.</p><div class="custom-container tip"><p class="custom-container-title">TIP 1</p><p><code>http proxy</code> can only proxy the TCP protocol and cannot handle protocols based on UDP.</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>In Linux, you can use the following environment variables to enable global HTTP proxy for the current session (many software support this setting, but some may not).</p><ul><li><code>export http_proxy=http://127.0.0.1:8080/</code> (Change the address to the configured inbound HTTP proxy address)</li><li><code>export https_proxy=$http_proxy</code></li><li>:::</li></ul><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;accounts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;allowTransparent&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>timeout</code>: number</p></blockquote><p>The idle timeout in seconds. The default value is <code>300</code>, and 0 means no timeout.</p><p>When handling a connection, if no data is transmitted within the timeout period, the connection will be terminated.</p><blockquote><p><code>accounts</code>: [<a href="#accountobject">AccountObject</a>]</p></blockquote><p>An array where each element represents a user account. The default value is an empty array.</p><p>When <code>accounts</code> is not empty, the HTTP proxy will perform Basic Authentication verification for inbound connections.</p><blockquote><p><code>allowTransparent</code>: true | false</p></blockquote><p>When set to <code>true</code>, it will forward all HTTP requests instead of just proxy requests.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Enabling this option without proper configuration may cause an infinite loop.</p></div></div><blockquote><p><code>userLevel</code>: number</p></blockquote>`,7),h=e("code",null,"userLevel",-1),m=e("code",null,"level",-1),v=c(`<h3 id="accountobject" tabindex="-1"><a class="header-anchor" href="#accountobject"><span>AccountObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>user</code>: string</p></blockquote><p>The username. It is a string and is required.</p><blockquote><p><code>pass</code>: string</p></blockquote><p>The password. It is a string and is required.</p>`,6);function b(k,f){const i=t("I18nTip"),s=t("RouterLink");return r(),l("div",null,[o(i),d,e("p",null,[n("The user level that the connection will use to determine the corresponding "),o(s,{to:"/en/config/policy.html#levelpolicyobject"},{default:a(()=>[n("Local Policy")]),_:1}),n(".")]),e("p",null,[n("The value of "),h,n(" corresponds to the value of "),m,n(" in the "),o(s,{to:"/en/config/policy.html#policyobject"},{default:a(()=>[n("policy")]),_:1}),n(". If not specified, the default value is 0.")]),v])}const y=p(u,[["render",b],["__file","http.html.vue"]]);export{y as default};
