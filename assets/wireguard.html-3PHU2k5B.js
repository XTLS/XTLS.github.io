import{_ as s,r as a,o as e,c as t,a as o,e as p}from"./app-DAbIUvv6.js";const i={},c=p(`<h1 id="wireguard" tabindex="-1"><a class="header-anchor" href="#wireguard"><span>Wireguard</span></a></h1><p>User-space Wireguard 协议实现。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>Wireguard 协议并非专门为翻墙而设计，若在最外层过墙，存在特征可能导致服务器被封锁</strong></p></div><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;secretKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PRIVATE_KEY&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;peers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;publicKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PUBLIC_KEY&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;allowedIPs&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;kernelMode&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default true if it&#39;s supported and permission is sufficient</span>
  <span class="token property">&quot;mtu&quot;</span><span class="token operator">:</span> <span class="token number">1420</span><span class="token punctuation">,</span> <span class="token comment">// optional, default 1420</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>secretKey</code>: string</p></blockquote><p>私钥。必填。</p><blockquote><p><code>mtu</code>: int</p></blockquote><p>Wireguard 底层 tun 的分片大小。</p><details><summary>MTU的计算方法</summary><p>一个wireguard数据包的结构如下</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>- 20-byte IPv4 header or 40 byte IPv6 header
- 8-byte UDP header
- 4-byte type
- 4-byte key index
- 8-byte nonce
- N-byte encrypted data
- 16-byte authentication tag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>N-byte encrypted data</code>即为我们需要的MTU的值，根据endpoint是IPv4还是IPv6，具体的值可以是1440(IPv4)或者1420(IPv6)，如果处于特殊环境下再额外减掉即可(如家宽PPPoE额外-8)。</p></details><blockquote><p><code>peers</code>: [ <a href="#peers">Peers</a> ]</p></blockquote><p>peers 服务器列表，其中每一项是一个服务器配置。</p><h3 id="peers" tabindex="-1"><a class="header-anchor" href="#peers"><span>Peers</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;publicKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PUBLIC_KEY&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;allowedIPs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;0.0.0.0/0&quot;</span><span class="token punctuation">]</span> <span class="token comment">// optional, default [&quot;0.0.0.0/0&quot;, &quot;::/0&quot;]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>publicKey</code>: string</p></blockquote><p>公钥，用于验证</p><blockquote><p><code>allowedIPs</code>: string array</p></blockquote><p>允许的源IP</p>`,18);function r(l,u){const n=a("I18nTip");return e(),t("div",null,[o(n),c])}const v=s(i,[["render",r],["__file","wireguard.html.vue"]]);export{v as default};
