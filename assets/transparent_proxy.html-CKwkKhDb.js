import{_ as i,r as t,o as c,c as d,a as n,b as a,d as s,w as r,e as p}from"./app-CxvjKt56.js";const u="/assets/netfilter-CUE6iAyE.png",b={},m=p('<h2 id="погружение-в-прозрачное-проксирование" tabindex="-1"><a class="header-anchor" href="#погружение-в-прозрачное-проксирование"><span>Погружение в прозрачное проксирование</span></a></h2><h3 id="что-такое-прозрачное-проксирование" tabindex="-1"><a class="header-anchor" href="#что-такое-прозрачное-проксирование"><span>Что такое прозрачное проксирование?</span></a></h3><p>Проще говоря, прозрачное проксирование не позволяет проксируемому устройству понять, что оно проксируется. Это означает, что на проксируемом устройстве не нужно запускать какое-либо программное обеспечение для проксирования (например, Xray, V2RayNG и т. д.). Когда вы подключаетесь к сети, ваше устройство уже проксируется.</p><p>Это также означает, что программное обеспечение прокси работает в другом месте, например, на маршрутизаторе, и устройства, подключенные к Интернету через маршрутизатор, автоматически проксируются.</p><h3 id="реализация-прозрачного-проксирования" tabindex="-1"><a class="header-anchor" href="#реализация-прозрачного-проксирования"><span>Реализация прозрачного проксирования</span></a></h3><p>В настоящее время существует два основных способа реализации прозрачного проксирования:</p><h3 id="tun2socks" tabindex="-1"><a class="header-anchor" href="#tun2socks"><span>tun2socks</span></a></h3><p>Доступно для Windows/Linux (включая Android). Поскольку процесс реализации относительно прост, существует не так много руководств, поэтому я кратко опишу его здесь.</p><p><strong>Windows</strong></p>',9),v={href:"https://github.com/NetchX/Netch/releases",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"[3] [TUN/TAP] Обход локальной сети",-1),h=p("<li><p>Включите точку доступа.</p></li><li><p>Откройте <code>Панель управления</code> -&gt; <code>Сеть и Интернет</code> -&gt; <code>Центр управления сетями и общим доступом</code> -&gt; <code>Изменение параметров адаптера</code>, найдите <code>TAP-Windows Adapter</code> и <code>Microsoft Wi-Fi Direct Virtual Adapter</code>.</p></li><li><p>Щелкните правой кнопкой мыши <code>TAP-Windows Adapter</code>, <code>Свойства</code> -&gt; <code>Доступ</code>, установите флажок <code>Разрешить другим пользователям сети подключаться к Интернету через это подключение к Интернету</code>, в <code>Домашнее сетевое подключение</code> выберите сетевое подключение <code>Microsoft Wi-Fi Direct Virtual Adapter</code>, нажмите <code>ОК</code>.</p></li>",3),g=p('<p><strong>Android</strong></p><ol><li><p>Настройте подключение V2RayNG.</p></li><li><p>Включите точку доступа.</p></li><li><p>Настройки точки доступа -&gt; Разрешить использование VPN для точки доступа (эта опция может отсутствовать в некоторых системах Android).</p></li></ol><h3 id="iptables-nftables" tabindex="-1"><a class="header-anchor" href="#iptables-nftables"><span>iptables/nftables</span></a></h3><p>iptables и nftables реализуют прозрачное проксирование по одному и тому же принципу, в дальнейшем мы будем использовать iptables.</p><p>Реализация прозрачного проксирования на основе iptables применима только к системам Linux (включая openwrt/Android). Благодаря своей эффективности по сравнению с tun2socks и возможности настройки на маршрутизаторах, она получила широкое распространение.</p>',5),R={href:"https://guide.v2fly.org/app/transparent_proxy.html",target:"_blank",rel:"noopener noreferrer"},A={href:"https://guide.v2fly.org/app/tproxy.html",target:"_blank",rel:"noopener noreferrer"},D=p('<h2 id="принцип-реализации-прозрачного-проксирования-с-помощью-iptables" tabindex="-1"><a class="header-anchor" href="#принцип-реализации-прозрачного-проксирования-с-помощью-iptables"><span>Принцип реализации прозрачного проксирования с помощью iptables</span></a></h2><p>Linux использует <code>Netfilter</code> для управления сетью, модель <code>Netfilter</code> выглядит следующим образом:</p><p><img src="'+u+`" alt="Netfilter"></p><p><strong>Предположим, что в качестве шлюза используется маршрутизатор (т. е. наш обычный способ подключения к Интернету), тогда:</strong></p><p>Направление трафика от устройств локальной сети к Интернету через маршрутизатор:</p><p><code>Цепочка PREROUTING -&gt; Цепочка FORWARD -&gt; Цепочка POSTINGROUTING</code></p><p>Направление трафика от устройств локальной сети к маршрутизатору (например, вход в веб-интерфейс маршрутизатора/подключение к маршрутизатору по ssh/доступ к DNS-серверу маршрутизатора и т. д.):</p><p><code>Цепочка PREROUTING -&gt; Цепочка INPUT -&gt; Хост шлюза</code></p><p>Направление трафика от маршрутизатора к Интернету:</p><p><code>Хост шлюза -&gt; Цепочка OUTPUT -&gt; Цепочка POSTINGROUTING</code></p><p><strong>Управляя направлением трафика цепочек <code>PREROUTING</code> и <code>OUTPUT</code> с помощью iptables и перенаправляя его на Xray, мы можем проксировать устройства локальной сети и хост шлюза.</strong></p><h2 id="в-чем-сложность-прозрачного-проксирования" tabindex="-1"><a class="header-anchor" href="#в-чем-сложность-прозрачного-проксирования"><span>В чем сложность прозрачного проксирования?</span></a></h2><p>Сложность прозрачного проксирования заключается в маршрутизации, то есть в различении того, какой трафик должен быть прямым, а какой должен проксироваться, поэтому я лично считаю, что термин <strong>разделение трафика</strong> более уместен.</p><p>Мы можем разделить маршрутизацию на следующие этапы по возрастанию сложности:</p><ol><li>Проксирование всех запросов.</li><li>Прямое подключение для локальных IP-адресов/многоадресных IP-адресов, проксирование для остальных запросов.</li><li>На основе пункта 2, прямое подключение для исходящих запросов, инициированных Xray.</li><li>На основе пункта 3, прямое подключение для запросов, адресованных китайским IP-адресам, и выбор внутренних и внешних DNS-серверов для разрешения внутренних и внешних доменных имен.</li></ol><p>Три вышеупомянутых руководства описывают четвертый этап. Поэтому новичкам может быть сложно понять их, читая напрямую.</p><h2 id="пошаговая-реализация-прозрачного-проксирования-на-основе-iptables-tproxy-с-нуля" tabindex="-1"><a class="header-anchor" href="#пошаговая-реализация-прозрачного-проксирования-на-основе-iptables-tproxy-с-нуля"><span>Пошаговая реализация прозрачного проксирования на основе iptables-tproxy с нуля</span></a></h2><h3 id="прежде-чем-начать-вам-необходимо-иметь-базовые-знания" tabindex="-1"><a class="header-anchor" href="#прежде-чем-начать-вам-необходимо-иметь-базовые-знания"><span>Прежде чем начать, вам необходимо иметь базовые знания:</span></a></h3><ol><li>Примерное представление о протоколах TCP/IP, доменных именах и DNS-серверах.</li><li>Знание того, что такое WAN-порт, LAN-порт, LAN_IP, WAN_IP и DHCP-сервер. Для пограничных маршрутизаторов есть только один сетевой порт, который мы будем называть LAN-портом.</li><li>Базовое понимание системы Linux (знание того, как запускать команды).</li><li>Умение писать конфигурационные файлы клиента в формате json или, по крайней мере, понимать их.</li></ol><h3 id="предварительная-подготовка" tabindex="-1"><a class="header-anchor" href="#предварительная-подготовка"><span>Предварительная подготовка</span></a></h3><div class="custom-container warning"><p class="custom-container-title">Внимание</p><p>Перед началом работы не забудьте включить пересылку пакетов ipv4 в Linux с помощью команды <code>sysctl -w net.ipv4.ip_forward=1</code></p></div><p><strong>1. Подготовьте шлюз под управлением Linux</strong></p><p>Например, маршрутизатор с прошивкой OpenWRT.</p><p><strong>2. Подготовьте исполняемый файл Xray и конфигурационный файл на шлюзе (маршрутизаторе)</strong></p><p>Конфигурационный файл прослушивает порт 12345 и включает tproxy:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;log&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;loglevel&quot;</span><span class="token operator">:</span> <span class="token string">&quot;warning&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>
      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dokodemo-door&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp,udp&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;sockopt&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;tproxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tproxy&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;outbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token comment">// Конфигурация вашего сервера</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Мы пойдем от простого к сложному, не будем писать routing, а напишем только один inbound и один outbound.</p><h3 id="сначала-даваите-попробуем-достичь-первого-этапа" tabindex="-1"><a class="header-anchor" href="#сначала-даваите-попробуем-достичь-первого-этапа"><span>Сначала давайте попробуем достичь первого этапа</span></a></h3><div class="custom-container warning"><p class="custom-container-title">Внимание</p><p>Если вы не хотите перезагружать свою машину, лучше сначала попрактиковаться на виртуальной машине</p></div><p>Перенаправьте весь трафик цепочки <code>PREROUTING</code> в Xray.</p><p>Запустите Xray и выполните следующие команды:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">100</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> <span class="token number">0.0</span>.0.0/0 dev lo table <span class="token number">100</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> XRAY
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> udp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-j</span> XRAY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>После ввода команд, если вы подключены к шлюзу по ssh, вы обнаружите, что соединение ssh разорвано (не беспокойтесь, перезагрузка восстановит его), и прозрачное проксирование не работает; если ваш шлюз - это виртуальная машина, вы обнаружите, что сам шлюз не может получить доступ к Интернету, и в журнале доступа Xray появится множество запросов с исходным адресом, равным целевому адресу, и целевым адресом, равным WAN_IP.</p><p>Теоретически доступ хоста шлюза к общедоступной сети должен проходить только через цепочки <code>OUTPUT</code> и <code>POSTINGROUTING</code>, так почему же управление цепочкой <code>PREROUTING</code> приводит к тому, что шлюз не может получить доступ к Интернету? Это связано с тем, что сетевое взаимодействие, как правило, двунаправленное, и хотя доступ шлюза к общедоступному IP-адресу не требует прохождения через цепочку <code>PREROUTING</code>, информация, возвращаемая сервером на шлюз, должна проходить через цепочку <code>PREROUTING</code>, и эта часть перенаправляется на Xray, что приводит к обратным запросам в журнале.</p><p>Давайте изменим правило, чтобы возвращать трафик, источник которого не находится в локальной сети. Перезагрузите шлюз, запустите Xray и выполните следующие команды:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">100</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> <span class="token number">0.0</span>.0.0/0 dev lo table <span class="token number">100</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> XRAY
<span class="token comment"># &quot;Диапазон LAN-адресов шлюза&quot; можно получить, выполнив команду &quot;ip address | grep -w &quot;inet&quot; | awk &#39;{print $2}&#39;&quot;, это будет один из адресов</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token operator">!</span> <span class="token parameter variable">-s</span> Диапазон LAN-адресов шлюза <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> udp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-j</span> XRAY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Теперь вы обнаружите, что, хотя соединение ssh разорвано, прозрачное проксирование уже работает. Если мы изменим системный DNS на общедоступный DNS, мы сможем нормально просматривать веб-страницы (поскольку в настоящее время шлюз недоступен, мы не можем установить DNS на шлюз).</p><p>На этом первый этап завершен. Причина, по которой мы не можем получить доступ к шлюзу, заключается в том, что правило проксирования проксирует весь трафик, включая трафик, адресованный шлюзу. Представьте, что вы пытаетесь получить доступ к своему локальному шлюзу с VPS, вы не сможете этого сделать, поэтому нам нужно сделать этот трафик прямым, смотрите второй этап:</p><h3 id="второи-этап" tabindex="-1"><a class="header-anchor" href="#второи-этап"><span>Второй этап</span></a></h3><p>Перезагрузите шлюз, запустите Xray и выполните следующие команды:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">100</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> <span class="token number">0.0</span>.0.0/0 dev lo table <span class="token number">100</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> XRAY

<span class="token comment"># Прямое подключение для всех запросов, адресованных сегменту сети шлюза</span>
<span class="token comment"># Получите сегменты сети, выполнив команду &quot;ip address | grep -w &quot;inet&quot; | awk &#39;{print $2}&#39;&quot;, как правило, их несколько</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-d</span> Сегмент сети шлюза <span class="token number">1</span> <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-d</span> Сегмент сети шлюза <span class="token number">2</span> <span class="token parameter variable">-j</span> RETURN
<span class="token punctuation">..</span>.

<span class="token comment"># Прямое подключение для запросов, адресованных многоадресным IP-адресам/адресам класса E/широковещательным IP-адресам</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-d</span> <span class="token number">224.0</span>.0.0/3 <span class="token parameter variable">-j</span> RETURN

iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> udp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-j</span> XRAY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>После использования этого правила предыдущее правило <code>iptables -t mangle -A XRAY ! -s Диапазон LAN-адресов шлюза -j RETURN</code> становится лишним и его можно удалить.</p><p>На этом второй этап завершен. Шлюз доступен, ssh не разрывается.</p><h3 id="третии-этап" tabindex="-1"><a class="header-anchor" href="#третии-этап"><span>Третий этап</span></a></h3><p>Обычно мы используем DNS, предоставляемый маршрутизатором, но это правило iptables проксирует только устройства в локальной сети, а не сам хост шлюза, поэтому возвращаемые результаты DNS-запросов могут быть неверными или загрязненными.</p><p>iptables-tproxy не поддерживает работу с цепочкой <code>OUTPUT</code>, но мы можем настроить <code>маршрутизацию по политике</code>, чтобы перенаправлять соответствующие пакеты из цепочки <code>OUTPUT</code> обратно в цепочку <code>PREROUTING</code>.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Добавить маршрут по политике: пакеты с меткой 1 направляются в таблицу маршрутизации 100</span>
<span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">100</span>
<span class="token comment"># Добавить запись маршрута в таблицу маршрутизации 100: все пакеты направляются локально</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> <span class="token number">0.0</span>.0.0/0 dev lo table <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Настроив <code>маршрутизацию по политике</code> выше, нам нужно только пометить пакеты, которые необходимо проксировать от хоста шлюза, меткой <code>1</code> в цепочке <code>OUTPUT</code>, и соответствующие пакеты будут направлены на сам хост шлюза, то есть в цепочку <code>PREROUTING</code>.</p><p>Если мы хотим проксировать все запросы, отправленные хостом шлюза, это вызовет проблему: Xray работает на шлюзе, Xray отправляет запросы на сервер прокси, и эти запросы снова проксируются, образуя петлю.</p><p>Поэтому, чтобы проксировать хост шлюза, необходимо избежать зацикливания, то есть исключить трафик запросов Xray из правил проксирования.</p><p><strong>Существуют три распространенных метода:</strong></p><ol><li>Прямое подключение трафика, адресованного VPS</li></ol><p>Перезагрузите шлюз, запустите Xray и выполните следующие команды:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Проксирование устройств локальной сети</span>
<span class="token comment"># Наследуем достижения предыдущего этапа</span>
<span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">100</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> <span class="token number">0.0</span>.0.0/0 dev lo table <span class="token number">100</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> XRAY
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-d</span> Сегмент сети шлюза <span class="token number">1</span> <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-d</span> Сегмент сети шлюза <span class="token number">2</span> <span class="token parameter variable">-j</span> RETURN
<span class="token punctuation">..</span>.
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-d</span> <span class="token number">224.0</span>.0.0/3 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY <span class="token parameter variable">-p</span> udp <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-j</span> XRAY

<span class="token comment"># Проксирование хоста шлюза</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> XRAY_MASK
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY_MASK <span class="token parameter variable">-d</span> Сегмент сети шлюза <span class="token number">1</span> <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY_MASK <span class="token parameter variable">-d</span> Сегмент сети шлюза <span class="token number">2</span> <span class="token parameter variable">-j</span> RETURN
<span class="token punctuation">..</span>.
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY_MASK <span class="token parameter variable">-d</span> <span class="token number">224.0</span>.0.0/3 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY_MASK <span class="token parameter variable">-d</span> Общедоступный IP-адрес VPS/32 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> XRAY_MASK <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">1</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> XRAY_MASK
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> udp <span class="token parameter variable">-j</span> XRAY_MASK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Однако у этого метода есть недостаток: если используется CDN или много VPS, то написание правил становится неудобным.</p><ol start="2"><li>Исключение с помощью меток</li></ol><p>Три вышеупомянутых русскоязычных руководства используют этот метод исключения, обратитесь к ним, мы не будем повторяться здесь.</p><ol start="3"><li>Исключение с помощью gid (рекомендуется)</li></ol>`,58),_=p('<p>На этом третий этап проксирования, также известный как глобальное проксирование, завершен. Но не забудьте установить DNS-сервер шлюза на зарубежный DNS-сервер, иначе вы все равно можете получить загрязненные результаты.</p><h3 id="четвертыи-этап" tabindex="-1"><a class="header-anchor" href="#четвертыи-этап"><span>Четвертый этап</span></a></h3><p>На самом деле, не всем нужно реализовывать четвертый этап. Глобальное проксирование подходит для большинства случаев.</p><p>Особенно для пограничных маршрутизаторов. При необходимости проксирования установите шлюз на IP-адрес пограничного маршрутизатора, при отсутствии необходимости проксирования - на IP-адрес основного маршрутизатора.</p><p>Что касается конкретной реализации четвертого этапа, то об этом подробно рассказывается в трех вышеупомянутых русскоязычных руководствах. После того, как вы поймете вышеизложенное, вам будет легче понять эти руководства.</p><h3 id="проксирование-ipv6" tabindex="-1"><a class="header-anchor" href="#проксирование-ipv6"><span>Проксирование IPv6</span></a></h3><p>Вышеуказанные правила действительны только для IPv4, если вы хотите проксировать запросы IPv6, используйте команду ip6tables, ее использование в основном такое же, как и у iptables. См. <strong>[[Прозрачное проксирование] Исключение трафика Xray с помощью gid # 4-Настройка правил iptables](../iptables_gid # 4-Настройка правил iptables.md)</strong></p><h1 id="другие-замечания-по-прозрачному-проксированию-с-помощью-iptables" tabindex="-1"><a class="header-anchor" href="#другие-замечания-по-прозрачному-проксированию-с-помощью-iptables"><span>Другие замечания по прозрачному проксированию с помощью iptables</span></a></h1>',8),f=a("li",null,[a("p",null,[s("Если шлюз, выступающий в качестве прокси, также является основным маршрутизатором, необходимо добавить правило "),a("code",null,"iptables -t mangle -A XRAY ! -s Диапазон LAN-адресов шлюза -j RETURN"),s(" в цепочку "),a("code",null,"PREROUTING"),s(", то есть команду, использованную на первом этапе и удаленную на втором этапе. Если этого не сделать, другие люди в той же подсети, что и WAN-порт, смогут использовать ваш WAN_IP в качестве шлюза, чтобы злоупотреблять вашим прозрачным прокси, что может быть небезопасно.")])],-1),N=a("strong",null,"[Новое руководство по V2Ray на русском языке - Прозрачное проксирование (TPROXY) # Настройка шлюза](https://guide.v2fly.org/app/tproxy.html # Настройка шлюза)",-1),T=a("code",null,"Настройте сеть ПК вручную, указав в качестве шлюза по умолчанию адрес Raspberry Pi, то есть 192.168.1.22. Теперь ПК должен иметь доступ к Интернету (поскольку проксирование еще не настроено, “доступ” означает возможность доступа к внутренним веб-сайтам)",-1),y={href:"https://github.com/BioniCosmos",target:"_blank",rel:"noopener noreferrer"},P={href:"https://guide.v2fly.org/app/tproxy.html#%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D1%8B-too-many-open-files",target:"_blank",rel:"noopener noreferrer"},B=a("strong",null,[a("a",{href:"../iptables_gid#3-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%BC%D0%B0%D0%BA%D1%81%D0%B8%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0-%D0%BE%D1%82%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D1%85-%D1%84%D0%B0%D0%B9%D0%BB%D0%BE%D0%B2-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D0%BA%D0%BB%D0%B8%D0%B5%D0%BD%D1%82%D0%B0-xray"},"[Прозрачное проксирование] Исключение трафика Xray с помощью gid - Настройка максимального количества открытых файлов и запуск клиента Xray")],-1),X=a("li",null,[a("p",null,"Избегайте повторного прохождения пакетов с существующими подключениями через TPROXY, будет дополнено...")],-1),x=a("li",null,[a("p",null,"Основной маршрутизатор, однорукий маршрутизатор и пограничный маршрутизатор, будет дополнено...")],-1);function U(Y,q){const o=t("I18nTip"),e=t("ExternalLinkIcon"),l=t("RouterLink");return c(),d("div",null,[n(o),m,a("ol",null,[a("li",null,[a("p",null,[s("Установите "),a("strong",null,[a("a",v,[s("Netch"),n(e)])]),s(", используя режим "),k,s(" для запуска.")])]),h]),g,a("p",null,[s("Существующие три русскоязычных руководства по прозрачному проксированию на самом деле описывают реализацию прозрачного проксирования на основе этого решения: "),a("strong",null,[a("a",R,[s("Новое руководство по V2Ray на русском языке - Прозрачное проксирование"),n(e)])]),s(", "),a("strong",null,[a("a",A,[s("Новое руководство по V2Ray на русском языке - Прозрачное проксирование (TPROXY)"),n(e)])]),s(", "),a("strong",null,[n(l,{to:"/ru/document/level-2/tproxy.html"},{default:r(()=>[s("Руководство по настройке прозрачного проксирования (TProxy)")]),_:1})]),s(". Первое основано на устаревшем режиме iptables-redirect, который не рекомендуется использовать и приводится только для справки. Второе и третье описывают реализацию прозрачного проксирования на основе режима iptables-tproxy.")]),D,a("p",null,[s("См. "),a("strong",null,[n(l,{to:"/ru/document/level-2/iptables_gid.html"},{default:r(()=>[s("[Прозрачное проксирование] Исключение трафика Xray с помощью gid")]),_:1})])]),_,a("ol",null,[f,a("li",null,[a("p",null,[s("В "),N,s(" третий пункт гласит: "),T,s(". На самом деле, даже если включена переадресация IP, ПК под управлением Ubuntu, CentOS, Debian и других систем не смогут получить доступ к Интернету, это нормально. Фактически, только OpenWRT может сделать то, что описано в статье, как указал "),a("strong",null,[a("a",y,[s("@BioniCosmos"),n(e)])]),s(", это связано с тем, что в обычных системах Linux нет правил Masquerade.")])]),a("li",null,[a("p",null,[a("strong",null,[a("a",P,[s("Проблема too many open files"),n(e)])]),s(", см. решение в "),B])]),X,x])])}const O=i(b,[["render",U],["__file","transparent_proxy.html.vue"]]);export{O as default};
