import{_ as c,r as o,o as r,c as d,a as s,b as e,d as t,w as p,e as a}from"./app-oFgL5Vdc.js";const u="/assets/ch07-img01-xray-install-6RUithnp.gif",h="/assets/ch07-img02-xray-cert-install-BVo1KeA2.png",m="/assets/ch07-img03-crontab-cert-renew-B_dwSLtg.gif",v="/assets/ch07-img04-xray-log-and-config-BP5ccZ8k.gif",b="/assets/ch07-img05-xray-start-and-status-Cl6yKbrT.gif",g="/assets/ch07-img06-bbr-proper-BpzfpFMr.gif",f="/assets/ch07-img07-http-to-https-QYIcd_gO.gif",y="/assets/ch07-img08-http-to-https-check-7ZPa5fw-.png",k={},w=a('<h1 id="chapter-7-xray-server" tabindex="-1"><a class="header-anchor" href="#chapter-7-xray-server"><span>[Chapter 7]Xray Server</span></a></h1><h2 id="_7-1-study-broadly-act-decisively" tabindex="-1"><a class="header-anchor" href="#_7-1-study-broadly-act-decisively"><span>7.1 Study broadly, Act decisively.</span></a></h2><p>During the writing of this article, the boss joked: Your tutorial has been serialized for 6 chapters and has not yet reached Xray. People who donâ€™t know would think that you are a &quot;hand-in-hand teaching you to build a website&quot; tutorial. (I can&#39;t refute it.jpg!)</p><p>In fact, this structure is my decision after much thinking. After all, only by laying a solid foundation can you quickly surpass others with half the effort. I saw many newcomers in the group who can&#39;t even use <code>nano</code> correctly, nor can they use <code>WinSCP</code>. The <code>config.json</code> edited by remote handwriting is naturally full of errors, and even error checking becomes difficult.</p><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>After the preparation of the first 6 chapters, you have already climbed over several mountains with me, such as basic Linux operations, VPS remote management, web page construction, domain name management, certificate application, etc. Do you think it is actually very simple when you look back? Now that we have such solid preparations, we will have a light feeling of [smooth success] when installing and configuring Xray.</p></div><p>The things to do next are very simple:</p><ol><li>Installation</li><li>Configuration (such as installing TLS certificates, <code>config.json</code>)</li><li>Run</li><li>Optimization (such as updating the kernel, enabling <code>bbr</code>, automatically redirecting <code>http</code> visits to <code>https</code>, etc.)</li></ol><h2 id="_7-2-install-xray" tabindex="-1"><a class="header-anchor" href="#_7-2-install-xray"><span>7.2 Install Xray</span></a></h2>',8),x={href:"https://github.com/XTLS/Xray-core",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"MPL 2.0",-1),_={href:"https://github.com/XTLS/Xray-install",target:"_blank",rel:"noopener noreferrer"},I=e("strong",null,"This article uses the [non-root user] installation mode",-1),T=a(`<p>When writing this article, the installation script had some minor bugs when using a non-root account, so I decided to separate these steps and explain the deletion command under Linux.</p><ol><li><p>Basic Linux commands for beginners:</p><table><thead><tr><th style="text-align:center;">Number</th><th style="text-align:center;">Command name</th><th style="text-align:center;">Command description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cmd-14</code></td><td style="text-align:center;"><code>rm</code></td><td style="text-align:center;">delete</td></tr></tbody></table></li><li><p>Download the installation script:</p></li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/XTLS/Xray-install/raw/main/install-release.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>Execute the installation command</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">bash</span> install-release.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>You can delete the script after use</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> ~/install-release.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>When you use the <code>rm</code> command to delete files, the default is to delete the files in the current folder. However, <strong>I still wrote the full path</strong>: <code>~/install-release.sh</code>, which is a safety habit I have when using <code>rm</code>, and it is also what I want to emphasize after I divide the installation into several steps. If you have heard some jokes like &quot;Programmers go from deleting libraries to running away&quot;, you probably know why.</p></div><ol start="5"><li>The complete process is demonstrated as follows:</li></ol><p><img src="`+u+'" alt="Xray server installation process demonstration"></p><h2 id="_7-3-configure-tls-certificate-for-xray" tabindex="-1"><a class="header-anchor" href="#_7-3-configure-tls-certificate-for-xray"><span>7.3 Configure TLS certificate for Xray</span></a></h2>',11),B={href:"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E#3-copy%E5%AE%89%E8%A3%85-%E8%AF%81%E4%B9%A6",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"acme.sh",-1),S=e("code",null,"--install-cert",-1),R=e("code",null,"xray-core",-1),C=a(`<ol><li>In order to avoid various potential permission problems of non-root accounts, we create a certificate folder under the vpsadmin account</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/xray_cert
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Use <code>--install-cert</code> of <code>acme.sh</code> to correctly install (copy) the certificate file</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>acme.sh --install-cert <span class="token parameter variable">-d</span> secondary domain name.your domain name.com <span class="token parameter variable">--ecc</span> <span class="token punctuation">\\</span>
--fullchain-file ~/xray_cert/xray.crt <span class="token punctuation">\\</span>
--key-file ~/xray_cert/xray.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>The <code>xray.key</code> file is not readable by other users by default, so it needs to be given readability</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +r ~/xray_cert/xray.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>The process is relatively simple, so no animated picture:</li></ol><p><img src="`+h+'" alt="Xray server installation process demonstration"></p>',8),L={start:"5"},A=a(`<p><code>acme.sh</code> will check the certificate every 60 days and automatically renew the expiring certificate. But as far as I know, it does not automatically install the new certificate to <code>xray-core</code>, so we need to add a system automatic periodic task to complete this step.</p><ol><li><p>Basic Linux commands for beginners:</p><table><thead><tr><th style="text-align:center;">Number</th><th style="text-align:center;">Command name</th><th style="text-align:center;">Command description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cmd-15</code></td><td style="text-align:center;"><code>crontab -e</code></td><td style="text-align:center;">Edit the current user&#39;s scheduled task</td></tr></tbody></table></li><li><p>Create a script file (<code>xray-cert-renew.sh</code>)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">nano</span> ~/xray_cert/xray-cert-renew.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Copy the following content, remember to replace your real domain name, then save and exit</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

/home/vpsadmin/.acme.sh/acme.sh --install-cert <span class="token parameter variable">-d</span> a-name.yourdomain.com <span class="token parameter variable">--ecc</span> --fullchain-file /home/vpsadmin/xray_cert/xray.crt --key-file /home/vpsadmin/xray_cert/xray.key
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Xray Certificates Renewed&quot;</span>

<span class="token function">chmod</span> +r /home/vpsadmin/xray_cert/xray.key
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Read Permission Granted for Private Key&quot;</span>

<span class="token function">sudo</span> systemctl restart xray
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Xray Restarted&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,2),D={class:"custom-container warning"},j=e("p",{class:"custom-container-title"},"Warning",-1),P=e("code",null,"acme.sh",-1),N=e("code",null,"reloadcmd",-1),E=e("code",null,"Xray",-1),z=e("code",null,"crontab",-1),W=e("code",null,"crontab",-1),F=e("code",null,"Xray",-1),U=e("code",null,"reloadcmd",-1),O={href:"https://github.com/acmesh-official/acme.sh",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"acme.sh",-1),H=e("p",null,[t("In addition, when recording animated images, the script did not include a command to restart "),e("code",null,"Xray"),t(" because "),e("code",null,"Xray"),t(" plans to support the [Certificate Hot Update] function, which means that "),e("code",null,"Xray"),t(" will automatically identify certificate updates and reload certificates without manual restart. After the function is added, I will modify "),e("code",null,"config.json"),t(" appropriately to enable this setting and delete the restart command in the script.")],-1),M=a(`<ol start="4"><li><p>Add [executable] permissions to this file</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>chmod +x ~/xray_cert/xray-cert-renew.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run <code>crontab -e</code> and add an automatic task [Automatically run <code>xray-cert-renew.sh</code> once a month] (Note that you should not add <code>sudo</code>, because we are adding an automatic task for the <code>vpsadmin</code> account. When you run it for the first time, you will be asked to choose an editor. Of course, choose the familiar <code>nano</code>!)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Add the following content to the end of the file, save and exit.</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># 1:00am, 1st day each month, run \`xray-cert-renew.sh\`
0 1 1 * * bash /home/vpsadmin/xray_cert/xray-cert-renew.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>The complete process is demonstrated as follows:</p><p><img src="`+m+'" alt="Automatically install certificates for Xray every month"></p></li></ol>',1),Y=e("h2",{id:"_7-4-configure-xray",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-4-configure-xray"},[e("span",null,"7.4 Configure Xray")])],-1),K={href:"https://github.com/XTLS/Xray-examples",target:"_blank",rel:"noopener noreferrer"},G=e("code",null,"VLESS",-1),J=e("code",null,"80",-1),Z=a(`<ol><li><p>Generate a legal <code>UUID</code> and save it for backup (<code>UUID</code> can be simply and roughly understood as an ID that is almost never repeated like a fingerprint)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>xray uuid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Create log files and folders for backup</p><ol><li><p>Basic Linux commands for beginners:</p><table><thead><tr><th style="text-align:center;">Number</th><th style="text-align:center;">Command name</th><th style="text-align:center;">Command description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cmd-16</code></td><td style="text-align:center;"><code>touch</code></td><td style="text-align:center;">Create a blank file</td></tr></tbody></table></li><li><p>Create a [log dedicated folder] in the <code>vpsadmin</code> folder</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/xray_log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Generate the two required log files (access log, error log)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">touch</span> ~/xray_log/access.log <span class="token operator">&amp;&amp;</span> <span class="token function">touch</span> ~/xray_log/error.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>This location is not the standard log file location of <code>Xray</code>. It is placed here to avoid permission issues that cause trouble for new users. Once you are familiar with it, it is recommended to return to the default location: <code>/var/log/xray/access.log</code> and <code>/var/log/xray/error.log</code>.</p></div><ol start="4"><li>Because Xray is used by the nobody user by default, we need to allow other users to have &quot;write&quot; permissions (<code>*.log</code> means all files with the suffix <code>log</code>, and the efficiency advantage of the <code>CLI</code> interface gradually appears at this time)<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> a+w ~/xray_log/*.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li><p>Use <code>nano</code> to create the configuration file of <code>Xray</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /usr/local/etc/xray/config.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Copy all the files below and fill in the previously generated <code>UUID</code> into the 61st line <code>&quot;id&quot;: &quot;&quot;,</code>. (After filling in, it will look like <code>&quot;id&quot;: &quot;uuiduuid-uuid-uuid-uuid-uuiduuiduuid&quot;</code> ) This configuration file in this article adds my various verbose comments to help you understand the function of each configuration module.</p></li></ol><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// REFERENCE:</span>
<span class="token comment">// https://github.com/XTLS/Xray-examples</span>
<span class="token comment">// https://xtls.github.io/config/</span>
<span class="token comment">// Commonly used config files, whether server or client, have 5 parts. Plus Xiao Xiaobai&#39;s interpretation:</span>
<span class="token comment">// â”Œâ”€ 1*log Log settings - what to write in the log and where to write (there is evidence when errors occur)</span>
<span class="token comment">// â”œâ”€ 2_dns DNS-settings - how to check DNS (anti-DNS pollution, anti-peeping, avoid matching domestic and foreign sites to foreign servers, etc.)</span>
<span class="token comment">// â”œâ”€ 3_routing Diversion settings - how to classify and process traffic (whether to filter ads, whether to divert traffic domestically and internationally)</span>
<span class="token comment">// â”œâ”€ 4_inbounds Inbound settings - what traffic can flow into Xray</span>
<span class="token comment">// â””â”€ 5_outbounds Outbound settings - where does the traffic out of Xray go</span>
<span class="token punctuation">{</span>
	<span class="token comment">// 1\\_Log settings</span>
	<span class="token property">&quot;log&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;loglevel&quot;</span><span class="token operator">:</span> <span class="token string">&quot;warning&quot;</span><span class="token punctuation">,</span> <span class="token comment">// content from less to more: &quot;none&quot;, &quot;error&quot;, &quot;warning&quot;, &quot;info&quot;, &quot;debug&quot;</span>
		<span class="token property">&quot;access&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/vpsadmin/xray_log/access.log&quot;</span><span class="token punctuation">,</span> <span class="token comment">// access record</span>
		<span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/vpsadmin/xray_log/error.log&quot;</span> <span class="token comment">// Error log</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token comment">// 2_DNS settings</span>
	<span class="token property">&quot;dns&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;servers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token string">&quot;https+local://1.1.1.1/dns-query&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Prefer 1.1.1.1 DoH query, sacrificing speed but preventing ISP snooping</span>
			<span class="token string">&quot;localhost&quot;</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token comment">// 3*Diversion settings</span>
	<span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;IPIfNonMatch&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token comment">// 3.1 Prevent local server flow problems: such as intranet attacks or abuse, incorrect local loopbacks, etc.</span>
			<span class="token punctuation">{</span>
				<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
					<span class="token string">&quot;geoip:private&quot;</span> <span class="token comment">// Diversion condition: In the geoip file, the rule named &quot;private&quot; (local)</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				<span class="token property">&quot;outboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;block&quot;</span> <span class="token comment">// Diversion strategy: Hand over to the outbound &quot;block&quot; for processing (black hole shielding)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span>
				<span class="token comment">// 3.2 Prevent the server from connecting directly to China</span>
				<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;geoip:cn&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
				<span class="token property">&quot;outboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;block&quot;</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token comment">// 3.3 Block ads</span>
			<span class="token punctuation">{</span>
				<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;domain&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
					<span class="token string">&quot;geosite:category-ads-all&quot;</span> <span class="token comment">// Diversion conditions: In the geosite file, the rule named &quot;category-ads-all&quot; (various advertising domain names)</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				<span class="token property">&quot;outboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;block&quot;</span> <span class="token comment">// Diversion strategy: Hand it over to the outbound &quot;block&quot; for processing (black hole shielding)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token comment">// 4* Inbound settings</span>
	<span class="token comment">// 4.1 Here is only the simplest vless+xtls inbound, because this is the most powerful mode of Xray. If you need other, please add it according to the template.</span>
	<span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
		<span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">443</span><span class="token punctuation">,</span>
		<span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vless&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
				<span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Fill in your UUID</span>
				<span class="token property">&quot;flow&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xtls-rprx-vision&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
				<span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vpsadmin@yourdomain.com&quot;</span>
			<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token property">&quot;decryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;fallbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
				<span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span> <span class="token comment">// Fall back to anti-detection proxy by default</span>
			<span class="token punctuation">}</span><span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;security&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tls&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;tlsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token property">&quot;alpn&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http/1.1&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;certificates&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
					<span class="token property">&quot;certificateFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/vpsadmin/xray_cert/xray.crt&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;keyFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/vpsadmin/xray_cert/xray.key&quot;</span>
				<span class="token punctuation">}</span><span class="token punctuation">]</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token comment">// 5*Outbound settings</span>
	<span class="token property">&quot;outbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token comment">// 5.1 The first outbound is the default rule, freedom is a direct connection to the outside (vps is already an external network, so it is a direct connection)</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;direct&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;freedom&quot;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token comment">// 5.2 Blocking rules, blackhole protocol is to import traffic into the black hole (blocking)</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;blackhole&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>The complete process is demonstrated as follows: <img src="`+v+`" alt="Create log file and  configuration file"></li></ol><h2 id="_7-5-start-xray-service-and-check-the-service-status" tabindex="-1"><a class="header-anchor" href="#_7-5-start-xray-service-and-check-the-service-status"><span>7.5 Start Xray service! ! (and check the service status)</span></a></h2><p>If you follow this article step by step, you have actually avoided the two most common pitfalls of <strong>insufficient log file permissions</strong> and <strong>insufficient certificate file permissions</strong>. Now running <code>Xray</code> should be very smooth.</p><ol><li>Enter the following command and enjoy the historic moment of starting <code>Xray</code>! ! !</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start xray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Just <code>start</code> does not determine whether the Xray service has been successfully started. To determine its status, use the following command.</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status xray

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Do you see the green, pleasant <code>active (running)</code>? It means that <code>Xray</code> is running correctly</p><ol start="3"><li>The complete process is demonstrated as follows:</li></ol><p><img src="`+b+`" alt="Start and check the running status of Xray"></p><h2 id="_7-6-review-systemd-for-basic-service-management" tabindex="-1"><a class="header-anchor" href="#_7-6-review-systemd-for-basic-service-management"><span>7.6 Review <code>systemd</code> for basic service management</span></a></h2><p>So far, we have used <code>systemctl</code> related commands such as <code>start</code>, <code>status</code>, <code>reload</code>, etc. These are general commands based on the <code>systemd</code> management module to manage various services in the Linux system. Now it is a good time to get familiar with several other related commands.</p><ol><li>If you need to temporarily shut down the <code>Xray</code> service, use the <code>stop</code> command</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop xray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>If you need to restart the <code>Xray</code> service, use the <code>restart</code> command</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart xray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>If you need to disable the <code>Xray</code> service (disable Xray from running automatically after the computer is restarted), use the <code>disable</code> command</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl disable xray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>If you need to enable the <code>Xray</code> service (ensure that Xray runs automatically after the computer is restarted), use the <code>enable</code> command</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> xray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7-7-server-optimization-1-enable-bbr" tabindex="-1"><a class="header-anchor" href="#_7-7-server-optimization-1-enable-bbr"><span>7.7 Server Optimization 1: Enable BBR</span></a></h2><ol><li>The legendary <code>BBR</code></li></ol><p>I believe that when you search for various scientific Internet technologies, you must have heard of the thing <code>bbr</code> more than once. With the exaggeration of various blogs, people feel that it is magical. There are also a lot of derivatives such as <code>bbrplus</code>, <code>bbr2</code>, <code>magic bbr</code>, etc. It&#39;s like a magic, which can turn a poorly routed lines become dedicated connections.</p><p>So, what is this thing? Is it useful? Which version should I use?</p><ol start="2"><li>The actual <code>BBR</code></li></ol><p><strong>BBR</strong> = <strong>B</strong>ottleneck <strong>B</strong>andwidth and <strong>R</strong>ound-trip propagation time, which is a <strong>congestion control algorithm</strong> of TCP. A simple and rough understanding is <strong>traffic management of data traffic</strong> : When the road is no longer congested, each car can naturally maintain a faster speed.</p><p>So is it useful? Generally speaking, there will be a perceptible difference between <code>with BBR</code> and <code>without BBR</code> (there will be some improvements in speed, stability, and latency), so <strong>[It is highly recommended to turn on <code>BBR</code>]</strong>.</p><p>But after it is enabled, the difference between <code>BBR</code> in <code>4.x</code> and <code>5.x</code> is often subtle and subjective, and the decisive factor that causes the difference in experience is still the line quality. So <strong>[Don&#39;t worry about the version, don&#39;t blindly chase the new, just follow your distribution to update the kernel]</strong></p><ol start="3"><li>Are <code>bbrplus</code>, <code>bbr2</code>, <code>magic bbr</code> and other versions that sound cool better?</li></ol><p>In a word: **No! Don&#39;t use these! These names are just to attract attention! **</p><p>The update and release of <code>BBR</code> are all carried out in accordance with the Linux kernel (<code>Kernel</code>). In other words, as long as you use a relatively new kernel, you will naturally use the new version of <code>BBR</code>.</p><p>And these things with cool names are, to put it bluntly, kernels that have not yet been officially released and are still in the testing stage and their corresponding <code>BBR</code> versions. These scripts are just the first to enable by downloading the preview version of the kernel (even a third-party magic kernel).</p><p>The stability of the kernel is the cornerstone of the stable operation of a server. <strong>The slight performance difference brought by the BBR beta is definitely not worth changing to an unstable Kernel. ã€‘</strong> Please choose the latest kernel supported by your Linux distribution, so as to maximize the long-term stability and compatibility of the server.</p><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>The so-called &quot;leading&quot; of the magic modification <code>bbr</code> is very time-sensitive. For example, many <code>bbrplus</code> scripts, because they have not been updated for several years, will still change your kernel to <code>4.19</code>. You should know that Debian is now stable and it is already the era of <code>5.9</code>. Then this script may be a little ahead in January 2018, but it has lost its meaning when 4.19 is released in October 2018. It can even be said to be completely [downgraded] and [degraded] now.</p><ol start="4"><li>Which of <code>fq</code>, <code>fq_codel</code>, <code>fq_pie</code>, <code>cake</code> and other algorithms is better?</li></ol><p>In one sentence: <strong>If you don&#39;t understand, please keep <code>fq</code>, which is enough and will not degrade your line</strong></p><ol start="5"><li>Ruisu, Finalspeed, LotServer and other &quot;acceleration tools&quot;</li></ol><p>In one sentence: **Don&#39;t use these! Throw them into the trash can of history! **</p><p>It can only solve the problem of packet loss rate. A not very accurate analogy is that you originally used a car to deliver your goods, and sometimes the car broke down halfway (packet loss). After using these, you directly sent out 3 copies of the same goods and let three cars deliver them at the same time. As long as one of them is not broken, it can be delivered. The road is full of your cars, so you can naturally squeeze others out. But it is conceivable that when you squeeze others, others will also squeeze you, and the exit road of the entire computer room is so wide, and it is bound to become a collective traffic jam in the end.</p><div class="custom-container warning"><p class="custom-container-title">description</p><p>Their principle is not algorithm optimization, not speed-up, most of them are simple and crude <strong>multiple packet delivery</strong>. It may be useful for bad lines with very high packet loss rates, but it has no optimization effect on good lines with low packet loss rates. Instead, it will consume your traffic exponentially, causing unnecessary pressure on the server and your neighbors.</p><p>If your line really has a very high packet loss rate, the only reliable solution is to <strong>change the line</strong>.</p></div></div><ol start="6"><li><p>I have said so much because there are too many misconceptions and scam scripts around <code>BBR</code> to fool novices. I hope you now have a relatively clear understanding of <code>BBR</code>. Next, let&#39;s install the latest Debian kernel and enable <code>BBR</code>! (It&#39;s really simple)</p><ol><li><p>Add the official <code>backports</code> source to Debian 10 to get the updated software library</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /etc/apt/sources.list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><div class="custom-container warning"><p class="custom-container-title">description</p><p>This article takes Debian 10 as an example, so there is still no problem using <code>/etc/apt/sources.list</code>, but if you are not starting from scratch according to this article, or using other Linux distributions, it is recommended that you create a <code>/etc/apt/sources.list.d/</code> folder and create your own configuration file in this folder, such as <code>/etc/apt/sources.list.d/vpsadmin.list</code> , to ensure compatibility and avoid the default file being overwritten in unforeseen circumstances and causing configuration loss.</p></div><ol start="2"><li><p>Then add the following item at the end, save and exit.</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>deb http://deb.debian.org/debian buster-backports main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Refresh the software library and query the latest version of the official Debian kernel and install it. Please be sure to install the version corresponding to your VPS (this article takes the more common [amd64] as an example).</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token parameter variable">-t</span> buster-backports <span class="token function">install</span> linux-image-amd64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><div class="custom-container warning"><p class="custom-container-title">Note</p><p>If your VPS supports it, you can try the [cloud server dedicated kernel] <code>linux-image-cloud-amd64</code>. The advantages are simplicity and low resource usage. The disadvantage is that some students have reported that forced installation on an unsupported system will cause the system to fail to boot (the kernel cannot be recognized).</p><p>To avoid the tragedy of being unable to identify, please make sure:</p><ul><li>Take a system snapshot before trying, or</li><li>You have <code>vnc</code> to save the day (and you know how to use it)</li></ul></div><ol start="4"><li><p>Modify the <code>kernel</code> parameter configuration file <code>sysctl.conf</code> and specify to enable <code>BBR</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /etc/sysctl.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><div class="custom-container warning"><p class="custom-container-title">description</p><p>This article takes Debian 10 as an example, so it is still no problem to use <code>/etc/sysctl.conf</code>, but if you are not following this article from scratch, or use other Linux distributions, it is recommended that you create a <code>/etc/sysctl.d/</code> folder and create your own configuration file in this folder, such as <code>/etc/sysctl.d/vpsadmin.conf</code>, to ensure compatibility, because some distributions no longer read parameters from <code>/etc/sysctl.conf</code> after <code>systemd</code> 207 â€‹â€‹version. Using a custom configuration file can also prevent the default file from being overwritten in unexpected circumstances, resulting in configuration loss.</p></div><ol start="5"><li><p>Add the following content</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Restart the VPS to make the kernel update and <code>BBR</code> settings take effect</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">reboot</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>The complete process is demonstrated as follows:</p></li></ol><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Because the VPS I am demonstrating supports the cloud server-specific kernel, I used <code>linux-image-cloud-amd64</code> in the animation.</p><p>If you are not sure whether your VPS supports it, please follow the command in step 3 and use the regular kernel <code>linux-image-amd64</code>.</p></div><p><img src="`+g+`" alt="Update Debian kernel and enable "></p><ol start="8"><li>Confirm that <code>BBR</code> is enabled</li></ol></li></ol><p>If you want to confirm whether <code>BBR</code> is enabled correctly, you can use the following command: <code>shell lsmod | grep bbr </code> This should return the following result: <code> tcp_bbr </code> If you want to confirm whether the <code>fq</code> algorithm is enabled correctly, you can use the following command: <code>shell lsmod | grep fq </code> This should return the following result: <code> sch_fq </code></p><h2 id="_7-8-server-optimization-2-enable-http-to-automatically-redirect-to-https" tabindex="-1"><a class="header-anchor" href="#_7-8-server-optimization-2-enable-http-to-automatically-redirect-to-https"><span>7.8 Server Optimization 2: Enable HTTP to automatically redirect to HTTPS</span></a></h2><ol><li>We have previously built an <code>http</code> webpage on port <code>80</code> and applied for a TLS certificate.</li></ol><p>But if you try to access our interface with a browser, you will find that <code>http</code> access will not automatically upgrade to <code>https</code> access like most websites. In other words, under our current settings, <code>http(80)</code> and <code>https(443)</code> are completely independent. If you want to solve this problem, you need to make some changes.</p><ol start="2"><li>Edit the Nginx configuration file</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /etc/nginx/nginx.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>Add the following statement to the 80 port server we set, save and exit (you can delete the <code>root</code> and <code>index</code> lines at the same time)</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>return 301 https://$http_host$request_uri;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>Add a local port listener at the same level as the <code>80</code> port to provide web page display. This article uses the <code>8080</code> port for demonstration. (Can be any port)</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>server {
listen 127.0.0.1:8080;
root /home/vpsadmin/www/webpage;
index index.html;
add_header Strict-Transport-Security &quot;max-age=63072000&quot; always;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>Restart Nginx service</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>Modify the fallback settings of Xray, changing the fallback from <code>80</code> port to <code>8080</code> port. (Find <code>&quot;dest&quot;: 80</code>, and change it to <code>&quot;dest&quot;: 8080</code>)</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /usr/local/etc/xray/config.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>Restart the <code>Xray</code> service to complete the configuration</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart xray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="8"><li>The complete process is demonstrated as follows:</li></ol><p><img src="`+f+'" alt="http automatically jumps to https"></p><ol start="9"><li>When you enter <code>http://a-name.yourdomain.com</code>, it should automatically jump to https</li></ol><p><img src="'+y+'" alt="http automatically jumps to https"></p><h2 id="_7-9-server-optimization-3-more-fallbacks" tabindex="-1"><a class="header-anchor" href="#_7-9-server-optimization-3-more-fallbacks"><span>7.9 Server Optimization 3: More Fallbacks</span></a></h2>',58),$=a('<h2 id="_7-10-your-progress" tabindex="-1"><a class="header-anchor" href="#_7-10-your-progress"><span>7.10 Your progress</span></a></h2><p>Congratulations!! At this point, you already have a server that can access the Internet normally and scientifically, and also have a disguised website that can prevent active detection attacks. Next, just install the appropriate software on your client and you can enjoy a smooth network!</p><blockquote><p>â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬œ 87.5%</p></blockquote><h2 id="_7-11-important-errata" tabindex="-1"><a class="header-anchor" href="#_7-11-important-errata"><span>7.11 Important errata</span></a></h2><ol><li>The folder location of the <code>Xray</code> configuration file <code>config.json</code> in the first version is wrong. If you have already operated according to the previous location, <code>Xray</code> will not start correctly. Therefore, the errata is explained here, please check it yourself, and I am very sorry for the inconvenience!</li></ol><ul><li>Correct location: <code>/usr/local/etc/xray/config.json</code></li><li>Wrong location: <code>/usr/local/etc/config.json</code></li></ul><p>Affected sections:</p><ul><li>7.4 Configure <code>Xray</code> - 3. Use <code>nano</code> to create <code>Xray</code> configuration file</li><li>7.8 Server Optimization 2 - 6. Modify <code>Xray</code> fallback settings</li></ul><ol start="2"><li>In the first version, the content of the <code>Nginx</code> configuration file <code>nginx.conf</code> was modified incorrectly (the webpage folder location was incorrect). If you have already performed the operation according to the previous location, <code>Nginx</code> will not be able to find the correct website. Please check it yourself. Sorry for the inconvenience!</li></ol><ul><li>Correct folder location: <code>root /home/vpsadmin/www/webpage;</code></li><li>Wrong folder location: <code>root /var/www/website/html</code></li></ul><p>Affected sections:</p><ul><li>7.8 Server Optimization 2 - 4. Add a local port listener at the same level as the <code>80</code> port to provide web page display</li></ul>',12);function Q(ee,te){const i=o("I18nTip"),n=o("ExternalLinkIcon"),l=o("RouterLink");return r(),d("div",null,[s(i),w,e("p",null,[t("First of all, the official carrier of Xray is the binary program generated by the open source project "),e("a",x,[t("xray-core"),s(n)]),t(" (Open sourced with License "),q,t(" ). If you put this binary on the server and run it, it is the server side; if you download it to the local computer and run it, it is the client side. The main difference comes from [configuration].")]),e("p",null,[t("When installing, it is very simple and direct to use the official installation script directly. It provides a variety of installation options. If you are interested, you can go to the official "),e("a",_,[t("installation script repository"),s(n)]),t(" to see the script instructions. "),I,t(".")]),T,e("p",null,[t("Although we have applied for TLS certificate before, according to the official instructions of "),e("a",B,[X,s(n)]),t(", it is not recommended to use the applied certificate directly. The correct way is to use the "),S,t(" command to install it for the required program. Let's install the certificate for "),R,t(" now.")]),C,e("ol",L,[e("li",null,[A,e("div",D,[j,e("p",null,[t("As you have reminded, "),P,t(" has a "),N,t(" command that can automatically execute a specific command when the certificate is updated, so you can specify to automatically install the certificate for "),E,t(", but because "),z,t(" is a very useful and commonly used function in Linux, this article retains the "),W,t(" method to update the "),F,t(" certificate. (If you interested in "),U,t(" can check out the "),e("a",O,[t("official documentation"),s(n)]),t(" of "),V,t(")")]),H]),M])]),Y,e("p",null,[t("First, you can refer to the "),e("a",K,[t("official VLESS configuration example"),s(n)]),t(" for various configurations. This article will configure a simplest method based on the official example: [Single "),G,t(" protocol inbound + "),J,t(" Port fallback], which meets the maximum speed and necessary security of most scenarios.")]),Z,e("p",null,[t("If you need more fallback functions, please refer to "),s(l,{to:"/en/document/level-1/fallbacks-lv1/"},{default:p(()=>[t("ã€ŠFallbacks (fallbacks) Functional Analysisã€‹")]),_:1})]),$])}const ae=c(k,[["render",Q],["__file","ch07-xray-server.html.vue"]]);export{ae as default};
