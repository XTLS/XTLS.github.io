import{_ as i,r as n,o as d,c as h,a as t,d as o,b as e,w as r,e as _}from"./app-DgchlZxK.js";const u={},p=e("h1",{id:"browser-dialer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#browser-dialer"},[e("span",null,"Browser Dialer")])],-1),S=e("h2",{id:"предыстория",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#предыстория"},[e("span",null,"Предыстория")])],-1),T=e("p",null,[o("Xray обычно использует uTLS для имитации поведения популярных браузеров, и им можно управлять с помощью настройки "),e("code",null,"fingerprint"),o(". Однако отпечатки, создаваемые uTLS, являются несовершенной копией реальных, и поскольку uTLS является популярной библиотекой, они сами могут стать целью.")],-1),b={href:"https://github.com/v2ray/discussion/issues/754#issuecomment-647934994",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"localhost:8080",-1),m=e("p",null,"Таким образом, поведение снятия отпечатков TLS является идеальным, и поэтому может быть возможно оживить серверы, которые отлично открываются как веб-сайты в браузере, но не подключаются с использованием какого-либо программного обеспечения для проксирования.",-1),x=e("p",null,"Однако есть много недостатков:",-1),y=e("li",null,"Пользователь должен запускать браузер рядом с клиентом Xray только для открытия прокси-соединения.",-1),g=e("li",null,"Browser Dialer не должен быть туннелирован через сам прокси, иначе возникнет петля. Пользователи TUN должны быть осторожны.",-1),w={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"localhost:8080",-1),k=e("code",null,"proxy.example.com:443",-1),X=e("li",null,"Браузер туннелирует ваш трафик с помощью JavaScript, поэтому наблюдается значительное снижение производительности (или разрядка аккумулятора).",-1),L=e("li",null,[o("Конфигурация, используемая с Browser Dialer, не может использовать собственные заголовки SNI или хоста. "),e("code",null,"SNI == host == address"),o(". Пользовательские заголовки HTTP и "),e("code",null,"tlsSettings"),o(" игнорируются полностью.")],-1),B=_('<h2 id="конфигурация" tabindex="-1"><a class="header-anchor" href="#конфигурация"><span>Конфигурация</span></a></h2><ol><li>Подготовьте рабочую конфигурацию WebSocket или SplitHTTP. Помните о вышеуказанных ограничениях.</li><li>Запустите Xray с помощью <code>XRAY_BROWSER_DIALER=127.0.0.1:8080</code>. В Windows это можно сделать как <code>set XRAY_BROWSER_DIALER=...</code>, а затем запустить ядро из консоли, в Linux ядро можно запустить как <code>XRAY_BROWSER_DIALER=127.0.0.1:8080 ./xray -c config.json</code>.</li><li>Откройте браузер, который не туннелирован через прокси, или измените маршрутизацию конфигурации таким образом, чтобы домен сервера Xray переходил к <code>freedom</code> непосредственно с клиента. Перейдите по адресу <code>localhost:8080</code> и откройте консоль разработчика с помощью <code>F12</code>, чтобы отслеживать ошибки.</li><li>Для повышения производительности и обхода произвольных ограничений на подключение, применяемых браузером, рекомендуется включить <code>Mux.Cool</code>.</li></ol><h2 id="внутренняя-работа" tabindex="-1"><a class="header-anchor" href="#внутренняя-работа"><span>Внутренняя работа</span></a></h2><ul><li>Xray прослушивает <code>http://127.0.0.1:8080</code>, а браузер обращается к <code>http://127.0.0.1:8080</code>, чтобы загрузить <code>JS</code> на веб-страницу.</li><li><code>JS</code> активно устанавливает соединение WebSocket с <code>http://127.0.0.1:8080</code>. Xray будет использовать это соединение для отправки инструкций, но пока оно попадает в пул соединений (реализованный как канал Go).</li><li>Когда необходимо установить соединение, Xray получает доступное соединение из пула и отправляет имя протокола, целевой URL-адрес и необязательные ранние данные.</li><li>Как только <code>JS</code> успешно подключается к цели, он сообщает об этом Xray и продолжает использовать это соединение для двунаправленной пересылки данных.</li><li>После закрытия соединения с сервером соединение с localhost также закрывается, но JS гарантирует, что всегда доступно как минимум одно незанятое соединение.</li></ul><h2 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>WebSocket</span></a></h2>',5),E=e("p",null,"В соответствии с потребностями браузера механизм ранних данных был скорректирован следующим образом:",-1),I=e("li",null,[o("Заголовок ответа сервера будет содержать запрошенный "),e("code",null,"Sec-WebSocket-Protocol"),o(", который также изначально obfuscates the length characteristic of the WSS handshake response.")],-1),P=e("li",null,[o("Кодировка, используемая для ранних данных для браузеров, - это "),e("code",null,"base64.RawURLEncoding"),o(" вместо "),e("code",null,"StdEncoding"),o(", и сервер сделал ее совместимой.")],-1),W={href:"https://github.com/XTLS/Xray-core/pull/375",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"?ed=2048",-1),H=e("code",null,"MaxHeaderBytes",-1),C=e("s",null,"(Хотя, похоже, это будет работать и без модификации.)",-1),D=e("h2",{id:"splithttp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#splithttp"},[e("span",null,"SplitHTTP")])],-1),N=e("p",null,[o("SplitHTTP поддерживает QUIC, но также может использоваться собственный стек QUIC браузера. В Chrome это можно сделать через "),e("code",null,"chrome://flags"),o(", в других браузерах он может быть уже включен или для него может потребоваться другой флаг.")],-1),A=e("p",null,[o("В общем, "),e("code",null,"tlsSettings"),o(" полностью игнорируются при использовании Browser Dialer. Xray никак не контролирует, какую версию HTTP выбирает браузер.")],-1);function J(U,O){const a=n("I18nTip"),l=n("Badge"),s=n("ExternalLinkIcon"),c=n("RouterLink");return d(),h("div",null,[t(a),p,t(l,{text:"БЕТА",type:"warning"}),o(),t(l,{text:"v1.4.1+",type:"warning"}),S,T,e("p",null,[o("Итак, "),e("a",b,[o("идея Browser Dialer"),t(s)]),o(" заключается в том, что Xray использует настоящий браузер для установления TLS-соединений. Это работает так: Xray запускает небольшой веб-сайт на "),f,o(", пользователь открывает этот веб-сайт в выбранном им браузере, а JavaScript на этой странице будет действовать как сетевой стек Xray (HTTP-клиент, TLS-клиент).")]),m,x,e("ul",null,[y,g,e("li",null,[o("Браузер может работать только со стандартным HTTP, что означает, что поддерживаются только "),t(c,{to:"/ru/transports/websocket.html"},{default:r(()=>[o("WebSocket")]),_:1}),o(" и "),t(c,{to:"/ru/transports/splithttp.html"},{default:r(()=>[o("SplitHTTP")]),_:1}),o(".")]),e("li",null,[e("a",w,[o("CORS"),t(s)]),o(" необходимо учитывать при выполнении запросов с одного веб-сайта ("),R,o(") на другой ("),k,o(").")]),X,L]),B,t(l,{text:"v1.4.1+",type:"warning"}),E,e("ul",null,[I,P,e("li",null,[o("Кроме того, в связи с "),e("a",W,[o("Xray-core#375"),t(s)]),o(" рекомендациями по "),v,o(" этот PR также увеличил сервер "),H,o(" на 4096. "),C])]),D,t(l,{text:"v1.8.19+",type:"warning"}),N,A])}const Y=i(u,[["render",J],["__file","browser_dialer.html.vue"]]);export{Y as default};
