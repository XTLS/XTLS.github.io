import{_ as u,r as c,o as i,c as r,a as o,b as n,d as s,w as p,e as t}from"./app-C1ZSQDOJ.js";const d={},k=t(`<h1 id="传输方式-utls、reality" tabindex="-1"><a class="header-anchor" href="#传输方式-utls、reality"><span>传输方式（uTLS、REALITY）</span></a></h1><p>传输方式（transport）是当前 Xray 节点和其它节点对接的方式。</p><p>传输方式指定了稳定的数据传输的方式。通常来说，一个网络连接的两端需要有对称的传输方式。比如一端用了 WebSocket，那么另一个端也必须使用 WebSocket，否则无法建立连接。</p><h2 id="streamsettingsobject" tabindex="-1"><a class="header-anchor" href="#streamsettingsobject"><span>StreamSettingsObject</span></a></h2><p><code>StreamSettingsObject</code> 对应入站或出站中的 <code>streamSettings</code> 项。每一个入站或出站都可以分别配置不同的传输配置，都可以设置 <code>streamSettings</code> 来进行一些传输的配置。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;security&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tlsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;realitySettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;kcpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;wsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;httpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;grpcSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;httpupgradeSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;splithttpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sockopt&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;mark&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpMaxSeg&quot;</span><span class="token operator">:</span> <span class="token number">1440</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpFastOpen&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tproxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dialerProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;acceptProxyProtocol&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpKeepAliveInterval&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpKeepAliveIdle&quot;</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpUserTimeout&quot;</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpCongestion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bbr&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;interface&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wg0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;v6only&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpWindowClamp&quot;</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpMptcp&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tcpNoDelay&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>network</code>: &quot;raw&quot; | &quot;ws&quot; | &quot;h2&quot; | &quot;grpc&quot; | &quot;kcp&quot; | &quot;httpupgrade&quot; | &quot;splithttp&quot;</p></blockquote><p>连接的数据流所使用的传输方式类型，默认值为 <code>&quot;raw&quot;</code></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>v24.9.30 版本后，为了更贴近实际行为，tcp传输方式已更名为raw, 为了兼容性，<code>&quot;network&quot;: &quot;raw&quot;</code> 和 &quot;network&quot;: &quot;tcp&quot;, <code>rawSettings</code>和<code>tcpSettings</code> 互为别名</p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>&quot;h2&quot; 可以写成 &quot;http&quot;，&quot;grpc&quot; 可以写成 &quot;gun&quot;，&quot;kcp&quot; 可以写成 &quot;mkcp&quot;。</p></div><blockquote><p><code>security</code>: &quot;none&quot; | &quot;tls&quot; | &quot;reality&quot;</p></blockquote><p>是否启用传输层加密，支持的选项有</p>`,12),q=n("li",null,[n("code",null,'"none"'),s(" 表示不加密（默认值）")],-1),b=n("code",null,'"tls"',-1),v={href:"https://zh.wikipedia.org/wiki/%E5%82%B3%E8%BC%B8%E5%B1%A4%E5%AE%89%E5%85%A8%E6%80%A7%E5%8D%94%E5%AE%9A",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,[n("code",null,'"reality"'),s(" 表示使用 REALITY。")],-1),g=t('<blockquote><p><code>tlsSettings</code>: <a href="#tlsobject">TLSObject</a></p></blockquote><p>TLS 配置。TLS 由 Golang 提供，通常情况下 TLS 协商的结果为使用 TLS 1.3，不支持 DTLS。</p><blockquote><p><code>realitySettings</code>: <a href="#realityobject">RealityObject</a></p></blockquote><p>Reality 配置。Reality 是 Xray 的原创黑科技。 Reality 比 TLS 的安全性更高, 配置方式也和 TLS 一致.</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>Reality 是目前最安全的传输加密方案, 且外部看来流量类型和正常上网具有一致性。 启用 Reality 并且配置合适的 XTLS Vision 流控模式, 可以 达到数倍甚至十几倍的性能提升。</p></div>',5),h=n("code",null,"rawSettings",-1),_=n("p",null,"当前连接的 raw 配置，仅当此连接使用 raw 时有效。",-1),y=n("code",null,"kcpSettings",-1),f=n("p",null,"当前连接的 mKCP 配置，仅当此连接使用 mKCP 时有效。",-1),S=n("code",null,"wsSettings",-1),I=n("p",null,"当前连接的 WebSocket 配置，仅当此连接使用 WebSocket 时有效。",-1),x=n("code",null,"httpSettings",-1),T=n("p",null,"当前连接的 HTTP 配置，仅当此连接使用 HTTP 时有效。",-1),P=n("code",null,"grpcSettings",-1),A=n("p",null,"当前连接的 gRPC 配置，仅当此连接使用 gRPC 时有效。。",-1),w=n("code",null,"httpupgradeSettings",-1),L=n("p",null,"当前连接的 HTTPUpgrade 配置，仅当此连接使用 HTTPUpgrade 时有效。",-1),C=n("code",null,"splithttpSettings",-1),j=t(`<p>当前连接的 SplitHTTP 配置，仅当此连接使用 SplitHTTP 时有效。</p><blockquote><p><code>sockopt</code>: <a href="#sockoptobject">SockoptObject</a></p></blockquote><p>透明代理相关的具体配置。</p><h3 id="tlsobject" tabindex="-1"><a class="header-anchor" href="#tlsobject"><span>TLSObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;serverName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xray.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;rejectUnknownSni&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;allowInsecure&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;alpn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;h2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http/1.1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;minVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;maxVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.3&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cipherSuites&quot;</span><span class="token operator">:</span> <span class="token string">&quot;此处填写你需要的加密套件名称,每个套件名称之间用:进行分隔&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;certificates&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;disableSystemRoot&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;enableSessionResumption&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;fingerprint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pinnedPeerCertificateChainSha256&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;masterKeyLog&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>serverName</code>: string</p></blockquote><p>指定服务器端证书的域名，在连接由 IP 建立时有用。</p><p>当留空时，自动使用address中的值（如果是域名），该值同时用于校验服务端证书是否有效。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如上所述，因为该值同时用于校验服务端证书是否有效，如果出于特殊目的将其修改为与服务端证书域名不一致的需要需要开启 <code>allowInsecure</code> 否则会导致证书认证失败。出于安全考虑我们不推荐长期使用这种方法，如果想要安全地伪造SNI，请考虑使用REALITY。</p><p>特别地，当客户端设置其为IP地址时，xray不会发送SNI，同样的要使用此功能也必须同时开启 <code>allowInsecure</code></p></div><blockquote><p><code>rejectUnknownSni</code>: bool</p></blockquote><p>当值为 <code>true</code> 时，服务端接收到的 SNI 与证书域名不匹配即拒绝 TLS 握手，默认为 false。</p><blockquote><p><code>alpn</code>: [ string ]</p></blockquote><p>一个字符串数组，指定了 TLS 握手时指定的 ALPN 数值。默认值为 <code>[&quot;h2&quot;, &quot;http/1.1&quot;]</code>。</p><blockquote><p><code>minVersion</code>: string</p></blockquote><p>minVersion 为可接受的最小 TLS 版本。</p><blockquote><p><code>maxVersion</code>: string</p></blockquote><p>maxVersion 为可接受的最大 TLS 版本。</p><blockquote><p><code>cipherSuites</code>: string</p></blockquote><p>CipherSuites 用于配置受支持的密码套件列表, 每个套件名称之间用:进行分隔.</p>`,19),E={href:"https://golang.org/src/crypto/tls/cipher_suites.go#L500",target:"_blank",rel:"noopener noreferrer"},N={href:"https://golang.org/src/crypto/tls/cipher_suites.go#L44",target:"_blank",rel:"noopener noreferrer"},O=t('<div class="custom-container danger"><p class="custom-container-title">警告</p><p>以上两项配置为非必要选项，正常情况下不影响安全性 在未配置的情况下 golang 根据设备自动选择. 若不熟悉, 请勿配置此选项, 填写不当引起的问题自行负责</p></div><blockquote><p><code>allowInsecure</code>: true | false</p></blockquote><p>是否允许不安全连接（仅用于客户端）。默认值为 <code>false</code>。</p><p>当值为 <code>true</code> 时，Xray 不会检查远端主机所提供的 TLS 证书的有效性。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>出于安全性考虑，这个选项不应该在实际场景中选择 true，否则可能遭受中间人攻击。</p></div><blockquote><p><code>disableSystemRoot</code>: true | false</p></blockquote><p>是否禁用操作系统自带的 CA 证书。默认值为 <code>false</code>。</p><p>当值为 <code>true</code> 时，Xray 只会使用 <code>certificates</code> 中指定的证书进行 TLS 握手。当值为 <code>false</code> 时，Xray 只会使用操作系统自带的 CA 证书进行 TLS 握手。</p><blockquote><p><code>enableSessionResumption</code>: true | false</p></blockquote><p>此参数的设置为 false 时, ClientHello 里没有 session_ticket 这个扩展。 通常来讲 go 语言程序的 ClientHello 里并没有用到这个扩展, 因此建议保持默认值。 默认值为 <code>false</code>。</p><blockquote><p><code>fingerprint</code> : string</p></blockquote><p>此参数用于配置指定 <code>TLS Client Hello</code> 的指纹。当其值为空时，表示不启用此功能。启用后，Xray 将通过 uTLS 库 <strong>模拟</strong> <code>TLS</code> 指纹，或随机生成。支持三种配置方式：</p><ol><li>常见浏览器最新版本的 TLS 指纹 包括</li></ol><ul><li><code>&quot;chrome&quot;</code></li><li><code>&quot;firefox&quot;</code></li><li><code>&quot;safari&quot;</code></li><li><code>&quot;ios&quot;</code></li><li><code>&quot;android&quot;</code></li><li><code>&quot;edge&quot;</code></li><li><code>&quot;360&quot;</code></li><li><code>&quot;qq&quot;</code></li></ul><ol start="2"><li>在 xray 启动时自动生成一个指纹</li></ol><ul><li><code>&quot;random&quot;</code>: 在较新版本的浏览器里随机抽取一个</li><li><code>&quot;randomized&quot;</code>: 完全随机生成一个独一无二的指纹 (100% 支持 TLS 1.3 使用 X25519)</li></ul>',16),F={start:"3"},B=n("code",null,'"HelloRandomizedNoALPN"',-1),D=n("code",null,'"HelloChrome_106_Shuffle"',-1),R={href:"https://github.com/refraction-networking/utls/blob/master/u_common.go#L434",target:"_blank",rel:"noopener noreferrer"},V={class:"custom-container tip"},U=n("p",{class:"custom-container-title"},"提示",-1),X=n("strong",null,"模拟",-1),M=n("code",null,"TLS Client Hello",-1),K=n("code",null,"TLS",-1),G=t('<div class="custom-container tip"><p class="custom-container-title">提示</p><p>当使用此功能时，TLS 的部分影响TLS指纹的选项将被 utls 库覆盖不再生效，列如ALPN。 会被传递的参数有 <code>&quot;serverName&quot; &quot;allowInsecure&quot; &quot;disableSystemRoot&quot; &quot;pinnedPeerCertificateChainSha256&quot; &quot;masterKeyLog&quot;</code></p></div><blockquote><p><code>pinnedPeerCertificateChainSha256</code>: [string]</p></blockquote><p>用于指定远程服务器的证书链 SHA256 散列值，使用标准编码格式。仅有当服务器端证书链散列值符合设置项中之一时才能成功建立 TLS 连接。</p><p>在连接因为此配置失败时，会展示远程服务器证书散列值。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>不建议使用这种方式获得证书链散列值，因为在这种情况下将没有机会验证此时服务器提供的证书是否为真实证书，进而不保证获得的证书散列值为期望的散列值。</p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果需要获得证书的散列值，应在命令行中运行 <code>xray tls certChainHash --cert &lt;cert.pem&gt;</code> 来获取，<code>&lt;cert.pem&gt;</code> 应替换为实际证书文件路径。</p></div><blockquote><p><code>certificates</code>: [ <a href="#certificateobject">CertificateObject</a> ]</p></blockquote><p>证书列表，其中每一项表示一个证书（建议 fullchain）。</p>',8),Y={class:"custom-container tip"},Q=n("p",{class:"custom-container-title"},"提示",-1),W={href:"https://github.com/XTLS/Xray-core/discussions/56#discussioncomment-215600",target:"_blank",rel:"noopener noreferrer"},H=t(`<blockquote><p><code>masterKeyLog</code> : string</p></blockquote><p>(Pre)-Master-Secret log 文件路径，可用于Wireshark等软件解密Xray发送的TLS连接，暂不支持与utls一起使用。</p><h3 id="realityobject" tabindex="-1"><a class="header-anchor" href="#realityobject"><span>RealityObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;show&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token string">&quot;example.com:443&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;xver&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;serverNames&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;example.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;privateKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;minClientVer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;maxClientVer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;maxTimeDiff&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;shortIds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0123456789abcdef&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;fingerprint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;chrome&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;serverName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;publicKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;shortId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;spiderX&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),J={class:"custom-container tip"},z=n("p",{class:"custom-container-title"},"提示",-1),Z={href:"https://github.com/XTLS/REALITY",target:"_blank",rel:"noopener noreferrer"},$=t('<blockquote><p><code>show</code> : true | false</p></blockquote><p>当值为 <code>true</code> 时，输出调试信息。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>以下为<strong>入站</strong>（<strong>服务端</strong>）配置。</p></div><blockquote><p><code>dest</code> : string</p></blockquote>',4),nn=n("code",null,"fallbacks",-1),sn=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"注意"),n("p",null,[s("为了伪装的效果考虑，Xray对于鉴权失败（非合法reality请求）的流量，会"),n("strong",null,"直接转发"),s("至 dest. 如果 dest 网站的 IP 地址特殊（如使用了 CloudFlare CDN 的网站） 则相当于你的服务器充当了 CloudFlare 的端口转发，可能造成被扫描后偷跑流量的情况。 为了杜绝这种情况，可以考虑前置Nginx等方法过滤掉不符合要求的SNI。")])],-1),on=n("blockquote",null,[n("p",null,[n("code",null,"xver"),s(" : number")])],-1),tn=n("code",null,"fallbacks",-1),en=n("blockquote",null,[n("p",null,[n("code",null,"serverNames"),s(" : [string]")])],-1),an=n("p",null,[s("必填，客户端可用的 "),n("code",null,"serverName"),s(" 列表，暂不支持 * 通配符。")],-1),pn={href:"https://zh.wikipedia.org/wiki/%E4%B8%BB%E9%A2%98%E5%A4%87%E7%94%A8%E5%90%8D%E7%A7%B0",target:"_blank",rel:"noopener noreferrer"},cn=t(`<p>其中可包含空值 <code>&quot;&quot;</code> 代表接受没有SNI的连接。</p><blockquote><p><code>privateKey</code> : string</p></blockquote><p>必填，执行 <code>./xray x25519</code> 生成。</p><blockquote><p><code>minClientVer</code> : string</p></blockquote><p>选填，客户端 Xray 最低版本，格式为 <code>x.y.z</code>。</p><blockquote><p><code>maxClientVer</code> : string</p></blockquote><p>选填，客户端 Xray 最高版本，格式为 <code>x.y.z</code>。</p><blockquote><p><code>maxTimeDiff</code> : number</p></blockquote><p>选填，允许的最大时间差，单位为毫秒。</p><blockquote><p><code>shortIds</code> : [string]</p></blockquote><p>必填，客户端可用的 <code>shortId</code> 列表，可用于区分不同的客户端。</p><p>格式要求见 <code>shortId</code></p><p>若包含空值，客户端 <code>shortId</code> 可为空。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>以下为<strong>出站</strong>（<strong>客户端</strong>）配置。</p></div><blockquote><p><code>serverName</code> : string</p></blockquote><p>服务端 serverNames 之一。</p><p>当服务端 <code>serverNames</code> 中包含空值时，与 TLS 类似可以在客户端使用 <code>&quot;serverName&quot;: &quot;0.0.0.0&quot;</code> 发起无SNI的连接。与TLS不同，REALITY使用这个功能并不需要开启也没有允许不安全选项。当使用此功能时请确保dest在接受无SNI的连接时会返回默认证书。</p><blockquote><p><code>fingerprint</code> : string</p></blockquote><p>必填，同 <a href="#tlsobject">TLSObject</a>。</p><blockquote><p><code>shortId</code> : string</p></blockquote><p>服务端 shortIds 之一。</p><p>长度为 8 个字节，即 16 个 0~f 的数字字母，可以小于16个，核心将会自动在后面补0, 但位数必须是<strong>偶数</strong> (因为一个字节有2位16进制数)</p><p>如 <code>aa1234</code> 会被自动补全为 <code>aa12340000000000</code>, 但是<code>aaa1234</code> 则会导致错误。</p><p>0也是偶数，所以若服务端的 <code>shordIDs</code> 包含空值 <code>&quot;&quot;</code> ，客户端也可为空。</p><blockquote><p><code>publicKey</code> : string</p></blockquote><p>必填，服务端私钥对应的公钥。使用 <code>./xray x25519 -i &quot;服务器私钥&quot;</code> 生成。</p><blockquote><p><code>spiderX</code> : string</p></blockquote><p>爬虫初始路径与参数，建议每个客户端不同。</p><h4 id="certificateobject" tabindex="-1"><a class="header-anchor" href="#certificateobject"><span>CertificateObject</span></a></h4><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;ocspStapling&quot;</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>
  <span class="token property">&quot;oneTimeLoading&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;usage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;encipherment&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;buildChain&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;certificateFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/certificate.crt&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keyFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/key.key&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;certificate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;--BEGIN CERTIFICATE--&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;MIICwDCCAaigAwIBAgIRAO16JMdESAuHidFYJAR/7kAwDQYJKoZIhvcNAQELBQAw&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;ADAeFw0xODA0MTAxMzU1MTdaFw0xODA0MTAxNTU1MTdaMAAwggEiMA0GCSqGSIb3&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;DQEBAQUAA4IBDwAwggEKAoIBAQCs2PX0fFSCjOemmdm9UbOvcLctF94Ox4BpSfJ+&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;3lJHwZbvnOFuo56WhQJWrclKoImp/c9veL1J4Bbtam3sW3APkZVEK9UxRQ57HQuw&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;OzhV0FD20/0YELou85TwnkTw5l9GVCXT02NG+pGlYsFrxesUHpojdl8tIcn113M5&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;pypgDPVmPeeORRf7nseMC6GhvXYM4txJPyenohwegl8DZ6OE5FkSVR5wFQtAhbON&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;OAkIVVmw002K2J6pitPuJGOka9PxcCVWhko/W+JCGapcC7O74palwBUuXE1iH+Jp&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;noPjGp4qE2ognW3WH/sgQ+rvo20eXb9Um1steaYY8xlxgBsXAgMBAAGjNTAzMA4G&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;A1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAA&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;MA0GCSqGSIb3DQEBCwUAA4IBAQBUd9sGKYemzwPnxtw/vzkV8Q32NILEMlPVqeJU&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;7UxVgIODBV6A1b3tOUoktuhmgSSaQxjhYbFAVTD+LUglMUCxNbj56luBRlLLQWo+&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;9BUhC/ow393tLmqKcB59qNcwbZER6XT5POYwcaKM75QVqhCJVHJNb1zSEE7Co7iO&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;6wIan3lFyjBfYlBEz5vyRWQNIwKfdh5cK1yAu13xGENwmtlSTHiwbjBLXfk+0A/8&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;r/2s+sCYUkGZHhj8xY7bJ1zg0FRalP5LrqY+r6BckT1QPDIQKYy615j1LpOtwZe/&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;d4q7MD/dkzRDsch7t2cIjM/PYeMuzh87admSyL6hdtK0Nm/Q&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;--END CERTIFICATE--&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;--BEGIN RSA PRIVATE KEY--&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;MIIEowIBAAKCAQEArNj19HxUgoznppnZvVGzr3C3LRfeDseAaUnyft5SR8GW75zh&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;bqOeloUCVq3JSqCJqf3Pb3i9SeAW7Wpt7FtwD5GVRCvVMUUOex0LsDs4VdBQ9tP9&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GBC6LvOU8J5E8OZfRlQl09NjRvqRpWLBa8XrFB6aI3ZfLSHJ9ddzOacqYAz1Zj3n&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;jkUX+57HjAuhob12DOLcST8np6IcHoJfA2ejhORZElUecBULQIWzjTgJCFVZsNNN&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;itieqYrT7iRjpGvT8XAlVoZKP1viQhmqXAuzu+KWpcAVLlxNYh/iaZ6D4xqeKhNq&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;IJ1t1h/7IEPq76NtHl2/VJtbLXmmGPMZcYAbFwIDAQABAoIBAFCgG4phfGIxK9Uw&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;qrp+o9xQLYGhQnmOYb27OpwnRCYojSlT+mvLcqwvevnHsr9WxyA+PkZ3AYS2PLue&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;C4xW0pzQgdn8wENtPOX8lHkuBocw1rNsCwDwvIguIuliSjI8o3CAy+xVDFgNhWap&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;/CMzfQYziB7GlnrM6hH838iiy0dlv4I/HKk+3/YlSYQEvnFokTf7HxbDDmznkJTM&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;aPKZ5qbnV+4AcQfcLYJ8QE0ViJ8dVZ7RLwIf7+SG0b0bqloti4+oQXqGtiESUwEW&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;/Wzi7oyCbFJoPsFWp1P5+wD7jAGpAd9lPIwPahdr1wl6VwIx9W0XYjoZn71AEaw4&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;bK4xUXECgYEA3g2o9WqyrhYSax3pGEdvV2qN0VQhw7Xe+jyy98CELOO2DNbB9QNJ&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;8cSSU/PjkxQlgbOJc8DEprdMldN5xI/srlsbQWCj72wXxXnVnh991bI2clwt7oYi&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;pcGZwzCrJyFL+QaZmYzLxkxYl1tCiiuqLm+EkjxCWKTX/kKEFb6rtnMCgYEAx0WR&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;L8Uue3lXxhXRdBS5QRTBNklkSxtU+2yyXRpvFa7Qam+GghJs5RKfJ9lTvjfM/PxG&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;3vhuBliWQOKQbm1ZGLbgGBM505EOP7DikUmH/kzKxIeRo4l64mioKdDwK/4CZtS7&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;az0Lq3eS6bq11qL4mEdE6Gn/Y+sqB83GHZYju80CgYABFm4KbbBcW+1RKv9WSBtK&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;gVIagV/89moWLa/uuLmtApyEqZSfn5mAHqdc0+f8c2/Pl9KHh50u99zfKv8AsHfH&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;TtjuVAvZg10GcZdTQ/I41ruficYL0gpfZ3haVWWxNl+J47di4iapXPxeGWtVA+u8&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;eH1cvgDRMFWCgE7nUFzE8wKBgGndUomfZtdgGrp4ouLZk6W4ogD2MpsYNSixkXyW&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;64cIbV7uSvZVVZbJMtaXxb6bpIKOgBQ6xTEH5SMpenPAEgJoPVts816rhHdfwK5Q&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;8zetklegckYAZtFbqmM0xjOI6bu5rqwFLWr1xo33jF0wDYPQ8RHMJkruB1FIB8V2&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GxvNAoGBAM4g2z8NTPMqX+8IBGkGgqmcYuRQxd3cs7LOSEjF9hPy1it2ZFe/yUKq&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;ePa2E8osffK5LBkFzhyQb0WrGC9ijM9E6rv10gyuNjlwXdFJcdqVamxwPUBtxRJR&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;cYTY2HRkJXDdtT0Bkc3josE6UUDvwMpO0CfAETQPto1tjNEDhQhT&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;--END RSA PRIVATE KEY--&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>ocspStapling</code>: number</p></blockquote><p>OCSP 装订更新，与证书热重载的时间间隔。 单位：秒。默认值为 <code>3600</code>，即一小时。</p><blockquote><p><code>oneTimeLoading</code>: true | false</p></blockquote><p>仅加载一次。值为 <code>true</code> 时将关闭证书热重载功能与 ocspStapling 功能。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>当值为 <code>true</code> 时，将会关闭 OCSP 装订。</p></div><blockquote><p><code>usage</code>: &quot;encipherment&quot; | &quot;verify&quot; | &quot;issue&quot;</p></blockquote><p>证书用途，默认值为 <code>&quot;encipherment&quot;</code>。</p><ul><li><code>&quot;encipherment&quot;</code>：证书用于 TLS 认证和加密。</li><li><code>&quot;verify&quot;</code>：证书用于验证远端 TLS 的证书。当使用此项时，当前证书必须为 CA 证书。</li><li><code>&quot;issue&quot;</code>：证书用于签发其它证书。当使用此项时，当前证书必须为 CA 证书。</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP 1</p><p>在 Windows 平台上可以将自签名的 CA 证书安装到系统中，即可验证远端 TLS 的证书。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>当有新的客户端请求时，假设所指定的 <code>serverName</code> 为 <code>&quot;xray.com&quot;</code>，Xray 会先从证书列表中寻找可用于 <code>&quot;xray.com&quot;</code> 的证书，如果没有找到，则使用任一 <code>usage</code> 为 <code>&quot;issue&quot;</code> 的证书签发一个适用于 <code>&quot;xray.com&quot;</code> 的证书，有效期为一小时。并将新的证书加入证书列表，以供后续使用。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 3</p><p>当 <code>certificateFile</code> 和 <code>certificate</code> 同时指定时，Xray 优先使用 <code>certificateFile</code>。<code>keyFile</code> 和 <code>key</code> 也一样。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 4</p><p>当 <code>usage</code> 为 <code>&quot;verify&quot;</code> 时，<code>keyFile</code> 和 <code>key</code> 可均为空。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 5</p><p>使用 <code>xray tls cert</code> 可以生成自签名的 CA 证书。</p></div>`,43),ln={class:"custom-container tip"},un=n("p",{class:"custom-container-title"},"TIP 6",-1),rn={href:"https://github.com/acmesh-official/acme.sh",target:"_blank",rel:"noopener noreferrer"},dn=t(`<blockquote><p><code>buildChain</code>: true | false</p></blockquote><p>仅当证书用途为 <code>issue</code> 时生效，若值为 <code>true</code> ，签发证书时将CA证书嵌入证书链。</p><div class="custom-container tip"><p class="custom-container-title">TIP 1</p><p>不应该将根证书嵌入证书链。该选项只适合在签名CA证书为中间证书时启用。</p></div><blockquote><p><code>certificateFile</code>: string</p></blockquote><p>证书文件路径，如使用 OpenSSL 生成，后缀名为 .crt。</p><blockquote><p><code>certificate</code>: [ string ]</p></blockquote><p>一个字符串数组，表示证书内容，格式如样例所示。<code>certificate</code> 和 <code>certificateFile</code> 二者选一。</p><blockquote><p><code>keyFile</code>: string</p></blockquote><p>密钥文件路径，如使用 OpenSSL 生成，后缀名为 .key。目前暂不支持需要密码的 key 文件。</p><blockquote><p><code>key</code>: [ string ]</p></blockquote><p>一个字符串数组，表示密钥内容，格式如样例如示。<code>key</code> 和 <code>keyFile</code> 二者选一。</p><h3 id="sockoptobject" tabindex="-1"><a class="header-anchor" href="#sockoptobject"><span>SockoptObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;mark&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpMaxSeg&quot;</span><span class="token operator">:</span> <span class="token number">1440</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpFastOpen&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tproxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dialerProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;acceptProxyProtocol&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpKeepAliveInterval&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpKeepAliveIdle&quot;</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpUserTimeout&quot;</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpcongestion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bbr&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;interface&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wg0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;V6Only&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpWindowClamp&quot;</span><span class="token operator">:</span> <span class="token number">600</span>
  <span class="token property">&quot;tcpMptcp&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tcpNoDelay&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;customSockopt&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>mark</code>: number</p></blockquote><p>一个整数。当其值非零时，在 outbound 连接上以此数值标记 SO_MARK。</p><ul><li>仅适用于 Linux 系统。</li><li>需要 CAP_NET_ADMIN 权限。</li></ul><blockquote><p><code>tcpMaxSeg</code>: number</p></blockquote><p>用于设置 TCP 数据包的最大传输单元。</p><blockquote><p><code>tcpFastOpen</code>: true | false | number</p></blockquote>`,19),kn={href:"https://zh.wikipedia.org/wiki/TCP%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80",target:"_blank",rel:"noopener noreferrer"},qn=n("p",null,[s("当其值为 "),n("code",null,"true"),s(" 或"),n("code",null,"正整数"),s("时，启用 TFO；当其值为 "),n("code",null,"false"),s(" 或"),n("code",null,"负数"),s("时，强制关闭 TFO；当此项不存在或为 "),n("code",null,"0"),s(" 时，使用系统默认设置。 可用于 inbound/outbound。")],-1),bn=t("<li><p>仅在以下版本（或更新版本）的操作系统中可用:</p><ul><li>Linux 3.16：需要通过内核参数 <code>net.ipv4.tcp_fastopen</code> 进行设定，此参数是一个 bitmap，<code>0x1</code> 代表客户端允许启用，<code>0x2</code> 代表服务器允许启用；默认值为 <code>0x1</code>，如果服务器要启用 TFO，请把此内核参数值设为 <code>0x3</code>。</li><li><s>Windows 10 (1607)</s>（实现不正确）</li><li>Mac OS 10.11 / iOS 9（需要测试）</li><li>FreeBSD 10.3 (Server) / 12.0 (Client)：需要把内核参数 <code>net.inet.tcp.fastopen.server_enabled</code> 以及 <code>net.inet.tcp.fastopen.client_enabled</code> 设为 <code>1</code>。（需要测试）</li></ul></li>",1),vn=n("code",null,"正整数",-1),mn={href:"https://tools.ietf.org/html/rfc7413#section-5.1",target:"_blank",rel:"noopener noreferrer"},gn=n("strong",null,"注意并非所有操作系统都支持在此设定",-1),hn=t("<ul><li>Linux / FreeBSD：此处的设定的<code>正整数</code>值代表上限，可接受的最大值为 2147483647，为 <code>true</code> 时将取 <code>256</code>；注意在 Linux，<code>net.core.somaxconn</code> 会限制此值的上限，如果超过了 <code>somaxconn</code>，请同时提高 <code>somaxconn</code>。</li><li>Mac OS：此处为 <code>true</code> 或<code>正整数</code>时，仅代表启用 TFO，上限需要通过内核参数 <code>net.inet.tcp.fastopen_backlog</code> 单独设定。</li><li>Windows：此处为 <code>true</code> 或<code>正整数</code>时，仅代表启用 TFO。</li></ul>",1),_n=n("li",null,[n("p",null,[s("对于 Outbound，设定为 "),n("code",null,"true"),s(" 或"),n("code",null,"正整数"),s("在任何操作系统都仅表示启用 TFO。")])],-1),yn=t("<blockquote><p><code>tproxy</code>: &quot;redirect&quot; | &quot;tproxy&quot; | &quot;off&quot;</p></blockquote><p>是否开启透明代理（仅适用于 Linux）。</p><ul><li><code>&quot;redirect&quot;</code>：使用 Redirect 模式的透明代理。支持所有基于 IPv4/6 的 TCP 连接。</li><li><code>&quot;tproxy&quot;</code>：使用 TProxy 模式的透明代理。支持所有基于 IPv4/6 的 TCP 和 UDP 连接。</li><li><code>&quot;off&quot;</code>：关闭透明代理。</li></ul><p>透明代理需要 Root 或 <code>CAP\\_NET\\_ADMIN</code> 权限。</p>",4),fn={class:"custom-container danger"},Sn=n("p",{class:"custom-container-title"},"警告",-1),In=n("code",null,"followRedirect",-1),xn=n("code",null,"true",-1),Tn=n("code",null,"tproxy",-1),Pn=n("code",null,"tproxy",-1),An=n("code",null,'"redirect"',-1),wn=n("blockquote",null,[n("p",null,[n("code",null,"domainStrategy"),s(': "AsIs"'),n("br"),s(' "UseIP" | "UseIPv6v4" | "UseIPv6" | "UseIPv4v6" | "UseIPv4"'),n("br"),s(' "ForceIP" | "ForceIPv6v4" | "ForceIPv6" | "ForceIPv4v6" | "ForceIPv4"')])],-1),Ln={href:"https://github.com/v2ray/v2ray-core/issues/1909",target:"_blank",rel:"noopener noreferrer"},Cn=n("p",null,[s("默认值 "),n("code",null,'"AsIs"'),s("。")],-1),jn=n("p",null,"当目标地址为域名时，配置相应的值，Freedom 的行为模式如下：",-1),En=n("li",null,[s("当使用 "),n("code",null,'"AsIs"'),s(" 时，Xray将直接使用系统栈发起连接，优先级与选择IP取决于系统设置。")],-1),Nn=t("<li><code>&quot;IPv4&quot;</code> 代表尝试仅使用IPv4进行连接，<code>&quot;IPv4v6&quot;</code> 代表尝试使用IPv4或IPv6连接，但对于双栈域名，使用IPv4。（v4v6调换后同理，不再赘述）</li><li>当在内置DNS设置了 <code>&quot;queryStrategy&quot;</code> 后，实际行为将会与这个选项取并，只有都被包含的IP类型才会被解析，如 <code>&quot;queryStrategy&quot;: &quot;UseIPv4&quot;</code> <code>&quot;domainStrategy&quot;: &quot;UseIP&quot;</code>，实际上等同于 <code>&quot;domainStrategy&quot;: &quot;UseIPv4&quot;</code>。</li><li>当使用 <code>&quot;Use&quot;</code> 开头的选项时，若解析结果不符合要求（如，域名只有IPv4解析结果但使用了UseIPv6），则会回落回AsIs。</li><li>当使用 <code>&quot;Force&quot;</code> 开头的选项时，若解析结果不符合要求，则该连接会无法建立。</li>",4),On={class:"custom-container tip"},Fn=n("p",{class:"custom-container-title"},"TIP",-1),Bn=n("code",null,'"UseIP"',-1),Dn=n("code",null,'"ForceIP"',-1),Rn=n("code",null,"sendThrough",-1),Vn=n("code",null,"sendThrough",-1),Un=n("code",null,"sendThrough",-1),Xn=t('<div class="custom-container danger"><p class="custom-container-title">警告</p><p>启用了此功能后，不当的配置可能会导致死循环。</p><p>一句话版本：连接到服务器，需要等待 DNS 查询结果；完成 DNS 查询，需要连接到服务器。</p><blockquote><p>Tony: 先有鸡还是先有蛋?</p></blockquote><p>详细解释：</p><ol><li>触发条件：代理服务器（proxy.com）。内置 DNS 服务器，非 Local 模式。</li><li>Xray 尝试向 proxy.com 建立 TCP 连接 <strong>前</strong> ，通过内置 DNS 服务器查询 proxy.com。</li><li>内置 DNS 服务器向 dns.com 建立连接，并发送查询，以获取 proxy.com 的 IP。</li><li><strong>不当的</strong> 的路由规则，导致 proxy.com 代理了步骤 3 中发出的查询。</li><li>Xray 尝试向 proxy.com 建立另一个 TCP 连接。</li><li>在建立连接前，通过内置 DNS 服务器查询 proxy.com。</li><li>内置 DNS 服务器复用步骤 3 中的连接，发出查询。</li><li>问题出现。步骤 3 中连接的建立，需要等待步骤 7 中的查询结果；步骤 7 完成查询，需要等待步骤 3 中的连接完全建立。</li><li>Good Game！</li></ol><p>解决方案：</p><ul><li>改内置 DNS 服务器的分流。</li><li>用 Hosts。</li><li><s>如果你还是不知道解决方案，就别用这个功能了。</s></li></ul><p>因此，<strong>不建议</strong> 经验不足的用户擅自使用此功能。</p></div><blockquote><p><code>dialerProxy</code>: &quot;&quot;</p></blockquote><p>一个出站代理的标识。当值不为空时，将使用指定的 outbound 发出连接。 此选项可用于支持底层传输方式的链式转发。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>此选项与 ProxySettingsObject.Tag 不兼容</p></div><blockquote><p><code>acceptProxyProtocol</code>: true | false</p></blockquote><p>仅用于 inbound，指示是否接收 PROXY protocol。</p>',6),Mn={href:"https://www.haproxy.org/download/2.2/doc/proxy-protocol.txt",target:"_blank",rel:"noopener noreferrer"},Kn=n("strong",null,"若你不了解它，请先忽略该项",-1),Gn=t('<p>常见的反代软件（如 HAProxy、Nginx）都可以配置发送它，VLESS fallbacks xver 也可以发送它。</p><p>填写 <code>true</code> 时，最底层 TCP 连接建立后，请求方必须先发送 PROXY protocol v1 或 v2，否则连接会被关闭。</p><blockquote><p><code>tcpKeepAliveInterval</code>: number</p></blockquote><p>TCP 保持活跃的数据包发送间隔，单位为秒。<s>该设置仅适用于 Linux 下。</s></p><p>它是连接不正常（未收到 ack）时候的心跳包。</p><p>不配置此项或配置为 0 表示使用 Go 默认值。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>填负数时，如 <code>-1</code>，不启用 TCP 保持活跃。</p></div><blockquote><p><code>tcpKeepAliveIdle</code>: number</p></blockquote><p>TCP 空闲时间阈值，单位为秒。当 TCP 连接空闲时间达到这个阈值时，将开始发送 Keep-Alive 探测包。</p><p>它是连接正常时候的心跳包。</p><p>不配置此项或配置为 0 表示使用 Go 默认值。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>填负数时，如 <code>-1</code>，不启用 TCP 保持活跃。</p></div><blockquote><p><code>tcpUserTimeout</code>: number</p></blockquote><p>单位为毫秒。详细介绍：https://github.com/grpc/proposal/blob/master/A18-tcp-user-timeout.md</p><blockquote><p><code>tcpcongestion</code>: &quot;&quot;</p></blockquote><p>TCP 拥塞控制算法。仅支持 Linux。 不配置此项表示使用系统默认值。</p><div class="custom-container tip"><p class="custom-container-title">常见的算法</p><ul><li>bbr（推荐）</li><li>cubic</li><li>reno</li></ul></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>执行命令 <code>sysctl net.ipv4.tcp_congestion_control</code> 获取系统默认值。</p></div><blockquote><p><code>interface</code>: &quot;&quot;</p></blockquote><p>指定绑定出口网卡名称，支持 linux / iOS / Mac OS / Windows。<br> iOS / Mac OS 需要 Xray-core v1.8.6 或更高版本。<br> Windows 需要 Xray-core v1.8.7 或更高版本。</p><blockquote><p><code>V6Only</code>: true | false</p></blockquote><p>填写 <code>true</code> 时，监听 <code>::</code> 地址仅接受 IPv6 连接。仅支持 Linux。</p><blockquote><p><code>tcpWindowClamp</code>: number</p></blockquote><p>绑定通告的 windows 大小为该值。内核会在它与 SOCK_MIN_RCVBUF/2 之间选一个最大值。</p><blockquote><p><code>tcpMptcp</code>: true | false</p></blockquote>',25),Yn=n("br",null,null,-1),Qn=n("code",null,"false",-1),Wn=n("code",null,"true",-1),Hn={href:"https://en.wikipedia.org/wiki/Multipath_TCP",target:"_blank",rel:"noopener noreferrer"},Jn=t(`<blockquote><p><code>tcpNoDelay</code>: true | false</p></blockquote><p>默认值 <code>false</code>，建议与 <code>&quot;tcpMptcp&quot;: true</code> 一起启用。</p><blockquote><p><code>customSockopt</code>: []</p></blockquote><p>一个数组，用于高级用户指定需要的任何 sockopt, 理论上上述所有与连接有关的设置均可以在此等价设置, 自然也可以设置Linux中存在但是核心未添加的其他选项，下方示例等价于核心中的 <code>&quot;tcpcongestion&quot;: &quot;bbr&quot;</code></p><p>使用前请确保你了解 Linux Socket 编程。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;customSockopt&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span><span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;opt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bbr&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>type</code>: &quot;&quot;</p></blockquote><p>必填，设置的类型，目前可选int或str.</p><blockquote><p><code>level</code>: &quot;&quot;</p></blockquote><p>可选，协议级别，用于指定生效范围，默认为6, 即TCP.</p><blockquote><p><code>opt</code>: &quot;&quot;</p></blockquote><p>操作的选项名称，使用十进制(此处示例为 TCP_CONGESTION 的值 定义为 0xd 转换为10进制即为13)</p><blockquote><p><code>value</code>: &quot;&quot;</p></blockquote><p>要设置的选项值，此处示例为设置为bbr.</p><p>当 type 指定为 int 时需要使用十进制数字。</p>`,15);function zn(Zn,$n){const l=c("I18nTip"),e=c("ExternalLinkIcon"),a=c("RouterLink");return i(),r("div",null,[o(l),k,n("ul",null,[q,n("li",null,[b,s(" 表示使用 "),n("a",v,[s("TLS"),o(e)]),s("。")]),m]),g,n("blockquote",null,[n("p",null,[h,s(": "),o(a,{to:"/config/transports/raw.html"},{default:p(()=>[s("TcpObject")]),_:1})])]),_,n("blockquote",null,[n("p",null,[y,s(": "),o(a,{to:"/config/transports/mkcp.html"},{default:p(()=>[s("KcpObject")]),_:1})])]),f,n("blockquote",null,[n("p",null,[S,s(": "),o(a,{to:"/config/transports/websocket.html"},{default:p(()=>[s("WebSocketObject")]),_:1})])]),I,n("blockquote",null,[n("p",null,[x,s(": "),o(a,{to:"/config/transports/http.html"},{default:p(()=>[s("HttpObject")]),_:1})])]),T,n("blockquote",null,[n("p",null,[P,s(": "),o(a,{to:"/config/transports/grpc.html"},{default:p(()=>[s("GRPCObject")]),_:1})])]),A,n("blockquote",null,[n("p",null,[w,s(": "),o(a,{to:"/config/transports/httpupgrade.html"},{default:p(()=>[s("HttpUpgradeObject")]),_:1})])]),L,n("blockquote",null,[n("p",null,[C,s(": "),o(a,{to:"/config/transports/splithttp.html"},{default:p(()=>[s("SplitHttpObject")]),_:1})])]),j,n("p",null,[s("你可以在 "),n("a",E,[s("这里"),o(e)]),s("或 "),n("a",N,[s("这里"),o(e)]),s(" 找到 golang 加密套件的名词和说明")]),O,n("ol",F,[n("li",null,[s("使用 uTLS 原生指纹变量名 例如"),B,s(),D,s("。完整名单见 "),n("a",R,[s("uTLS 库"),o(e)])])]),n("div",V,[U,n("p",null,[s("此功能仅 "),X,s(),M,s(" 的指纹，行为、其他指纹与 Golang 相同。如果你希望更加完整地模拟浏览器 "),K,s(" 指纹与行为，可以使用 "),o(a,{to:"/config/transports/websocket.html#browser-dialer"},{default:p(()=>[s("Browser Dialer")]),_:1}),s("。")])]),G,n("div",Y,[Q,n("p",null,[s("如果要在 ssllibs 或者 myssl 获得 A/A+ 等级的评价, 请参考 "),n("a",W,[s("这里"),o(e)]),s(".")])]),H,n("div",J,[z,n("p",null,[s("更多信息请参考 "),n("a",Z,[s("REALITY 项目"),o(e)]),s(".")])]),$,n("p",null,[s("必填，格式同 VLESS "),nn,s(" 的 "),o(a,{to:"/config/features/fallback.html#fallbackobject"},{default:p(()=>[s("dest")]),_:1}),s("。")]),sn,on,n("p",null,[s("选填，格式同 VLESS "),tn,s(" 的 "),o(a,{to:"/config/features/fallback.html#fallbackobject"},{default:p(()=>[s("xver")]),_:1})]),en,an,n("p",null,[s("一般与dest保持一致即可，实际的可选值为服务器所接受的任何SNI（依据 dest 本身的配置有所不同），一个参考是所返回证书的 "),n("a",pn,[s("SAN"),o(e)]),s(".")]),cn,n("div",ln,[un,n("p",null,[s("如已经拥有一个域名, 可以使用工具便捷的获取免费第三方证书,如"),n("a",rn,[s("acme.sh"),o(e)])])]),dn,n("p",null,[s("是否启用 "),n("a",kn,[s("TCP Fast Open"),o(e)]),s("。")]),qn,n("ul",null,[bn,n("li",null,[n("p",null,[s("对于 Inbound，此处所设定的"),vn,s("代表 "),n("a",mn,[s("待处理的 TFO 连接请求数上限"),o(e)]),s(" ，"),gn,s("：")]),hn]),_n]),yn,n("div",fn,[Sn,n("p",null,[s("当 "),o(a,{to:"/config/inbounds/dokodemo.html"},{default:p(()=>[s("Dokodemo-door")]),_:1}),s(" 中指定了 "),In,s("为"),xn,s("，且 Sockopt 设置中的"),Tn,s(" 为空时，Sockopt 设置中的"),Pn,s(" 的值会被设为 "),An,s("。")])]),wn,n("p",null,[s("在之前的版本中，当 Xray 尝试使用域名建立系统连接时，域名的解析由系统完成，不受 Xray 控制。这导致了在 "),n("a",Ln,[s("非标准 Linux 环境中无法解析域名"),o(e)]),s(" 等问题。为此，Xray 1.3.1 为 Sockopt 引入了 Freedom 中的 domainStrategy，解决了此问题。")]),Cn,jn,n("ul",null,[En,n("li",null,[s("当填写其他值时，将使用 Xray-core "),o(a,{to:"/dns.html"},{default:p(()=>[s("内置 DNS 服务器")]),_:1}),s(" 服务器进行解析。若不存在DNSObject，则使用系统DNS。若有多个符合条件的IP地址时，核心会随机选择一个IP作为目标IP。")]),Nn]),n("div",On,[Fn,n("p",null,[s("当使用 "),Bn,s("、"),Dn,s(" 模式时，并且 "),o(a,{to:"/outbound.html#outboundobject"},{default:p(()=>[s("出站连接配置")]),_:1}),s(" 中指定了 "),Rn,s(" 时，Freedom 会根据 "),Vn,s(" 的值自动判断所需的 IP 类型，IPv4 或 IPv6。若手动指定了单种IP类型（如UseIPv4），但与 "),Un,s(" 指定的本地地址不匹配，将会导致连接失败。")])]),Xn,n("p",null,[n("a",Mn,[s("PROXY protocol"),o(e)]),s(" 专用于传递请求的真实来源 IP 和端口，"),Kn,s("。")]),Gn,n("p",null,[s("Xray-core v1.8.6 新增参数。"),Yn,s(" 默认值 "),Qn,s("，填写 "),Wn,s(" 时，启用 "),n("a",Hn,[s("Multipath TCP"),o(e)]),s("，需在服务端和客户端配置中同时启用。 当前仅支持Linux，需要Linux Kernel 5.6及以上。")]),Jn])}const ss=u(d,[["render",zn],["__file","transport.html.vue"]]);export{ss as default};
