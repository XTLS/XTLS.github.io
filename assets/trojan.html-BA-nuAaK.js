import{_ as p,r as o,o as r,c as u,a,b as e,d as n,w as t,e as c}from"./app-iCLZdFp1.js";const d={},b=e("h1",{id:"trojan",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#trojan"},[e("span",null,"Trojan")])],-1),k={href:"https://trojan-gfw.github.io/trojan/protocol",target:"_blank",rel:"noopener noreferrer"},v=c(`<div class="custom-container danger"><p class="custom-container-title">Danger</p><p>Trojan is designed to work with correctly configured encrypted TLS tunnels.</p></div><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;fallbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>clients</code>: [ <a href="#clientobject">ClientObject</a> ]</p></blockquote><p>An array representing a group of users approved by the server.</p><p>Each item in the array is a user <a href="#clientobject">ClientObject</a>.</p>`,6),h=e("code",null,"fallbacks",-1),m=e("code",null,"fallbacks",-1),f=c(`<div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Xray&#39;s Trojan has full support for fallbacks, and the configuration is identical. The conditions triggering fallback are similar to VLESS: first packet length &lt; 58 or the 57th byte is not <code>\\r</code> (because Trojan does not have a protocol version) or authentication failure.</p></div><h3 id="clientobject" tabindex="-1"><a class="header-anchor" href="#clientobject"><span>ClientObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>password</code>: string</p></blockquote><p>Required. Any string.</p><blockquote><p><code>email</code>: string</p></blockquote><p>Email address. Optional. Used to identify the user.</p><div class="custom-container danger"><p class="custom-container-title">Danger</p><p>If there are multiple <code>ClientObject</code>s, please make sure that the email addresses are not duplicated.</p></div><blockquote><p><code>level</code>: number</p></blockquote>`,9),g=e("code",null,"level",-1),_=e("code",null,"level",-1);function q(j,y){const l=o("I18nTip"),i=o("ExternalLinkIcon"),s=o("RouterLink");return r(),u("div",null,[a(l),b,e("p",null,[n("The "),e("a",k,[n("Trojan"),a(i)]),n(" protocol.")]),v,e("blockquote",null,[e("p",null,[h,n(": [ "),a(s,{to:"/en/config/features/fallback.html"},{default:t(()=>[n("FallbackObject")]),_:1}),n(" ]")])]),e("p",null,[n("An array that contains a series of powerful fallback configurations (optional). The specific configuration for "),m,n(" can be found in the "),a(s,{to:"/en/config/features/fallback.html#fallbacks-configuration"},{default:t(()=>[n("FallbackObject")]),_:1}),n(" documentation.")]),f,e("p",null,[n("The user level that the connection will use to determine the corresponding "),a(s,{to:"/en/config/policy.html#levelpolicyobject"},{default:t(()=>[n("Local Policy")]),_:1}),n(".")]),e("p",null,[n("The value of "),g,n(" corresponds to the value of "),_,n(" in the "),a(s,{to:"/en/config/policy.html#policyobject"},{default:t(()=>[n("policy")]),_:1}),n(". If not specified, the default value is 0.")])])}const x=p(d,[["render",q],["__file","trojan.html.vue"]]);export{x as default};
