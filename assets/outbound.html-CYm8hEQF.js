import{_ as u,r as s,o as r,c as p,a as n,b as e,d as o,w as a,e as c}from"./app-CikVt7pH.js";const d={},h=e("h1",{id:"outbound-proxies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#outbound-proxies"},[e("span",null,"Outbound Proxies")])],-1),b=c(`<h2 id="outboundobject" tabindex="-1"><a class="header-anchor" href="#outboundobject"><span>OutboundObject</span></a></h2><p>The <code>OutboundObject</code> corresponds to a sub-element of the <code>outbounds</code> item in the configuration file.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>The first element in the list serves as the main outbound. When there is no match or no successful match for the routing, the traffic is sent out by the main outbound.</p></div><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;outbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;sendThrough&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;protocol name&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;identifier&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;proxySettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another-outbound-tag&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;mux&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>sendThrough</code>: address</p></blockquote><p>The IP address used to send data. It is effective when the host has multiple IP addresses, and the default value is <code>&quot;0.0.0.0&quot;</code>.</p><p>It is allowed to fill in the IPv6 CIDR block (such as <code>114:514:1919:810::/64</code>), and Xray will use the random IP address in the address block to initiate external connections. Network access, routing tables, and kernel parameters need to be configured correctly to allow Xray to bind to any IP within the address block.</p><p>For networks that use ndp to access, it is not recommended to set a subnet smaller than <code>/120</code>, otherwise it may cause NDP flood and a series of problems such as the router neighbor cache being filled up.</p><blockquote><p><code>protocol</code>: string</p></blockquote><p>The name of the connection protocol. For a list of optional protocols, see Outbound Proxy in the left sidebar.</p><blockquote><p><code>settings</code>: OutboundConfigurationObject</p></blockquote><p>The specific configuration content varies depending on the protocol. See <code>OutboundConfigurationObject</code> in each protocol for details.</p><blockquote><p><code>tag</code>: string</p></blockquote><p>The identifier of this outbound connection, used to locate this connection in other configurations.</p><div class="custom-container danger"><p class="custom-container-title">Danger</p><p>When it is not empty, its value must be <strong>unique</strong> among all <code>tag</code>s.</p></div>`,15),m=e("code",null,"streamSettings",-1),f=c(`<p>The underlying transport method is the way the current Xray connects with other nodes.</p><blockquote><p><code>proxySettings</code>: <a href="#proxysettingsobject">ProxySettingsObject</a></p></blockquote><p>The outbound proxy configuration. When the outbound proxy takes effect, the <code>streamSettings</code> of this outbound will not work.</p><blockquote><p><code>mux</code>: <a href="#muxobject">MuxObject</a></p></blockquote><p>Specific configuration related to Mux.</p><h3 id="proxysettingsobject" tabindex="-1"><a class="header-anchor" href="#proxysettingsobject"><span>ProxySettingsObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another-outbound-tag&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>tag</code>: string</p></blockquote><p>When specifying the identifier of another outbound, data emitted by this outbound will be forwarded to the specified outbound.</p>`,9),g={class:"custom-container danger"},k=e("p",{class:"custom-container-title"},"Danger",-1),v=e("strong",null,"not go through",-1),x=e("div",{class:"custom-container danger"},[e("p",{class:"custom-container-title"},"Danger"),e("p",null,"This option is incompatible with SockOpt.dialerProxy.")],-1),q={class:"custom-container tip"},y=e("p",{class:"custom-container-title"},"Tip",-1),w={href:"https://www.v2fly.org/config/outbounds.html#proxysettingsobject",target:"_blank",rel:"noopener noreferrer"},_=c(`<h3 id="muxobject" tabindex="-1"><a class="header-anchor" href="#muxobject"><span>MuxObject</span></a></h3><p>The Mux feature distributes the data of multiple TCP connections on a single TCP connection. For implementation details, see <a href="../../development/protocols/muxcool">Mux.Cool</a>. Mux is designed to reduce the latency of TCP handshake, not to increase the throughput of connections. Using Mux for watching videos, downloading, or speed testing usually has negative effects. Mux only needs to be enabled on the client side, and the server side automatically adapts. Mux has an additional function: to run multiple UDP connections, i.e. XUDP.</p><p><code>MuxObject</code> corresponds to the <code>mux</code> item in <code>OutboundObject</code>.</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">8</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>enabled</code>: true | false</p></blockquote><p>Whether to enable Mux forwarding requests, default is <code>false</code>.</p><blockquote><p><code>concurrency</code>: number</p></blockquote><p>Maximum concurrent connections. Minimum value is <code>1</code>, maximum value is <code>1024</code>. If this parameter is omitted or equal to <code>0</code>, the value will be <code>8</code>.</p><p>This value represents the maximum number of Mux connections that can be carried on a TCP connection. For example, when <code>concurrency=8</code> is set, if the client sends 8 TCP requests, Xray will only send one actual TCP connection, and all 8 requests from the client will be transmitted through this TCP connection.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>When filling in a negative number, such as <code>-1</code>, the mux module is not loaded.</p></div><blockquote><p><code>xudpConcurrency</code>: number</p></blockquote><p>Use a new XUDP aggregate tunnel (that is, another Mux connection) to proxy UDP traffic and fill in the maximum number of concurrent sub-UoTs. minimum value <code>1</code>, the maximum value <code>1024</code>. If this parameter is omitted or equal to <code>0</code>, UDP traffic will use the same path as TCP traffic.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>When filling in negative numbers, such as <code>-1</code>, UDP will not be transmitted via Mux. The original UDP transmission method of the proxy protocol will be used. For example, Shadowsocks will use native UDP, VLESS will use UoT.</p></div><blockquote><p><code>xudpProxyUDP443</code>: string</p></blockquote><p>Control how Mux handles proxied UDP/443 (QUIC) traffic:</p><ul><li>Default <code>reject</code>: Deny traffic (generaly, browsers will fall back to to TCP HTTP/2)</li><li><code>allow</code>: Allow connections.</li><li><code>skip</code>: The Mux module is not used to carry UDP 443 traffic. The original UDP transmission method of the proxy protocol will be used. For example, Shadowsocks will use native UDP, VLESS will use UoT.</li></ul>`,16);function T(P,j){const i=s("I18nTip"),t=s("RouterLink"),l=s("ExternalLinkIcon");return r(),p("div",null,[n(i),h,e("p",null,[o("Outbound connections are used for sending data and can use any of the available protocols listed in "),n(t,{to:"/en/config/outbounds/"},{default:a(()=>[o("outbound protocols")]),_:1}),o(".")]),b,e("blockquote",null,[e("p",null,[m,o(": "),n(t,{to:"/en/config/transport.html#streamsettingsobject"},{default:a(()=>[o("StreamSettingsObject")]),_:1})])]),f,e("div",g,[k,e("p",null,[o("This forwarding method does "),v,o(" the underlying transport. If you need to use forwarding that supports the underlying transport, please use "),n(t,{to:"/en/config/transport.html#sockoptobject"},{default:a(()=>[o("SockOpt.dialerProxy")]),_:1}),o(".")])]),x,e("div",q,[y,e("p",null,[o("Compatible with v2fly/v2ray-core's configuration "),e("a",w,[o("transportLayer"),n(l)]),o(".")])]),_])}const D=u(d,[["render",T],["__file","outbound.html.vue"]]);export{D as default};
