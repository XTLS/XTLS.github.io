import{_ as d,r as e,o as i,c as r,a as s,b as n,d as o,w as c,e as a}from"./app-CvaQq0F5.js";const k={},q=n("h1",{id:"入站代理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#入站代理"},[n("span",null,"入站代理")])],-1),b=a(`<h2 id="inboundobject" tabindex="-1"><a class="header-anchor" href="#inboundobject"><span>InboundObject</span></a></h2><p><code>InboundObject</code> 对应配置文件中 <code>inbounds</code> 项的一个子元素。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span>
      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;协议名称&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;标识&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sniffing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;destOverride&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tls&quot;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;allocate&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;strategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;refresh&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>listen</code>: address</p></blockquote><p>监听地址，IP 地址或 Unix domain socket，默认值为 <code>&quot;0.0.0.0&quot;</code>，表示接收所有网卡上的连接.</p><p>可以指定一个系统可用的 IP 地址。</p><p><code>&quot;::&quot;</code> 等价于<code>&quot;0.0.0.0&quot;</code> 两者都会同时监听 IPv6 和 IPv4. 不过如果只想监听IPv6可以将 <code>sockopt</code> 的 <code>v6only</code> 设置为 true</p><p>注意，因为UDP不是面向连接的，如果入站基于 UDP 且网卡上存在多个IP地址而外部连接的是网卡上的非首选地址，将会导致 Xray 使用错误地使用首选地址而非外部连接的目标作为源地址回复导致连接不通。 解决办法是不要监听 <code>0.0.0.0</code> 而是监听网卡上具体的 IP 地址。</p>`,8),v=n("code",null,'"/dev/shm/domain.socket"',-1),m=n("code",null,"@",-1),g={href:"https://www.man7.org/linux/man-pages/man7/unix.7.html",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"@@",-1),h=a("<p>填写 Unix domain socket 时，<code>port</code> 和 <code>allocate</code> 将被忽略，协议目前可选 VLESS、VMess、Trojan，仅适用于基于 TCP 的底层传输，如 <code>tcp</code> <code>websocket</code> <code>grpc</code> 不支持基于 UDP 的传输 如 <code>mkcp</code></p><p>填写 Unix domain socket 时，填写为形如 <code>&quot;/dev/shm/domain.socket,0666&quot;</code> 的形式，即 socket 后加逗号及访问权限指示符，即可指定 socket 的访问权限，可用于解决默认情况下出现的 socket 访问权限问题。</p><blockquote><p><code>port</code>: number | &quot;env:variable&quot; | string</p></blockquote><p>端口。接受的格式如下:</p><ul><li>整型数值：实际的端口号。</li><li>环境变量：以 <code>&quot;env:&quot;</code> 开头，后面是一个环境变量的名称，如 <code>&quot;env:PORT&quot;</code>。Xray 会以字符串形式解析这个环境变量。</li><li>字符串：可以是一个数值类型的字符串，如 <code>&quot;1234&quot;</code>；或者一个数值范围，如 <code>&quot;5-10&quot;</code> 表示端口 5 到端口 10，这 6 个端口。可以使用逗号进行分段，如 <code>11,13,15-17</code> 表示端口 11、端口 13、端口 15 到端口 17 这 5 个端口。</li></ul><p>当只有一个端口时，Xray 会在此端口监听入站连接。当指定了一个端口范围时，取决于 <code>allocate</code> 设置。</p><blockquote><p><code>protocol</code>: string</p></blockquote><p>连接协议名称，可选的协议列表见左侧 入站代理。</p><blockquote><p><code>settings</code>: InboundConfigurationObject</p></blockquote><p>具体的配置内容，视协议不同而不同。详见每个协议中的 <code>InboundConfigurationObject</code>。</p>",10),y=n("code",null,"streamSettings",-1),_=a(`<p>底层传输方式（transport）是当前 Xray 节点和其它节点对接的方式</p><blockquote><p><code>tag</code>: string 此入站连接的标识，用于在其它的配置中定位此连接。</p></blockquote><div class="custom-container danger"><p class="custom-container-title">警告</p><p>当其不为空时，其值必须在所有 <code>tag</code> 中<strong>唯一</strong>。</p></div><blockquote><p><code>sniffing</code>: <a href="#sniffingobject">SniffingObject</a></p></blockquote><p>流量探测主要作用于在透明代理等用途. 比如一个典型流程如下:</p><ol><li>如有一个设备上网,去访问 abc.com,首先设备通过 DNS 查询得到 abc.com 的 IP 是 1.2.3.4,然后设备会向 1.2.3.4 去发起连接.</li><li>如果不设置嗅探,Xray 收到的连接请求是 1.2.3.4,并不能用于域名规则的路由分流.</li><li>当设置了 sniffing 中的 enable 为 true,Xray 处理此连接的流量时,会从流量的数据中,嗅探出域名,即 abc.com</li><li>Xray 会把 1.2.3.4 重置为 abc.com.路由就可以根据域名去进行路由的域名规则的分流</li></ol><p>因为变成了一个向 abc.com 请求的连接, 就可以做更多的事情, 除了路由域名规则分流, 还能重新做 DNS 解析等其他工作.</p><p>当设置了 sniffing 中的 enable 为 true, 还能嗅探出 bittorrent 类型的流量, 然后可以在路由中配置&quot;protocol&quot;项来设置规则处理 BT 流量, 比如服务端用来拦截 BT 流量, 或客户端固定转发 BT 流量到某个 VPS 去等.</p><blockquote><p><code>allocate</code>: <a href="#allocateobject">AllocateObject</a></p></blockquote><p>当设置了多个 port 时, 端口分配的具体设置</p><h3 id="sniffingobject" tabindex="-1"><a class="header-anchor" href="#sniffingobject"><span>SniffingObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;destOverride&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tls&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fakedns&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;metadataOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;domainsExcluded&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;routeOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>enabled</code>: true | false</p></blockquote><p>是否开启流量探测。</p><blockquote><p><code>destOverride</code>: [&quot;http&quot; | &quot;tls&quot; | &quot;quic&quot; | &quot;fakedns&quot; | &quot;fakedns+others&quot; ]</p></blockquote><p>当流量为指定类型时，按其中包括的目标地址重置当前连接的目标。</p><p>其中 <code>[&quot;fakedns+others&quot;]</code> 相当于 <code>[&quot;http&quot;, &quot;tls&quot;, &quot;quic&quot;, &quot;fakedns&quot;]</code>，当 IP 地址处于 FakeIP 区间内但没有命中域名记录时会使用 <code>http</code>、<code>tls</code> 和 <code>quic</code> 进行匹配。此项仅在 <code>metadataOnly</code> 为 <code>false</code> 时有效。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>Xray只会嗅探 <code>destOverride</code> 中协议的域名用作路由，如果只想进行嗅探用作路由而不想重置目标地址（如使用Tor浏览器时，重置目标地址会导致无法连接），请在这里添加对应的协议并启用 <code>routeOnly</code> 。</p></div><blockquote><p><code>metadataOnly</code>: true | false</p></blockquote><p>当启用时，将仅使用连接的元数据嗅探目标地址。此时，除 <code>fakedns</code> 以外的 sniffer 将不能激活（包括 <code>fakedns+others</code>）。</p><p>如果关闭仅使用元数据推断目标地址，此时客户端必须先发送数据，代理服务器才会实际建立连接。此行为与需要服务器首先发起第一个消息的协议不兼容，如 SMTP 协议。</p>`,21),j=n("code",null,"domainsExcluded",-1),x=a(`<p>一个域名列表，如果流量探测结果在这个列表中时，将 <strong>不会</strong> 重置目标地址。</p><p>支持直接的域名（精确匹配），或 <code>regexp:</code> 开头后接正则表达式。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>填写一些域名，可能解决iOS 推送通知，米家智能设备，某些游戏（彩虹六号）语音问题。<br> 如果需要排查某些问题的原因，可以通过关闭 <code>&quot;sniffing&quot;</code> 或者启用 <code>&quot;routeOnly&quot;</code> 来测试。</p></div><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;domainsExcluded&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;courier.push.apple.com&quot;</span><span class="token punctuation">,</span> <span class="token comment">// iOS 推送通知</span>
    <span class="token string">&quot;Mijia Cloud&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 米家智能设备</span>
    <span class="token string">&quot;dlg.io.mi.com&quot;</span>
<span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>目前，<code>domainsExcluded</code> 不支持类似路由中的域名匹配方式。此选项未来可能会改变，不保证跨版本兼容。</p></div><blockquote><p><code>routeOnly</code>: true | false</p></blockquote><p>将嗅探得到的域名仅用于路由，代理目标地址仍为 IP。默认值为 <code>false</code>。</p><p>此项需要开启 <code>destOverride</code> 使用。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在能保证 <strong>被代理连接能得到正确的 DNS 解析</strong> 时，使用 <code>routeOnly</code> 且开启 <code>destOverride</code> 的同时，将路由匹配策略 <code>domainStrategy</code> 设置为 <code>AsIs</code> 即可实现全程无 DNS 解析进行域名及 IP 分流。此时遇到 IP 规则匹配时使用的 IP 为域名原始 IP。</p></div><h3 id="allocateobject" tabindex="-1"><a class="header-anchor" href="#allocateobject"><span>AllocateObject</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;strategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;refresh&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>strategy</code>: &quot;always&quot; | &quot;random&quot;</p></blockquote><p>端口分配策略。</p><ul><li><code>&quot;always&quot;</code> 表示总是分配所有已指定的端口，<code>port</code> 中指定了多少个端口，Xray 就会监听这些端口。</li><li><code>&quot;random&quot;</code> 表示随机开放端口，每隔 <code>refresh</code> 分钟在 <code>port</code> 范围中随机选取 <code>concurrency</code> 个端口来监听。</li></ul><blockquote><p><code>refresh</code>: number</p></blockquote><p>随机端口刷新间隔，单位为分钟。最小值为 <code>2</code>，建议值为 <code>5</code>。这个属性仅当 <code>strategy</code> 设置为 <code>&quot;random&quot;</code> 时有效。</p><blockquote><p><code>concurrency</code>: number</p></blockquote><p>随机端口数量。最小值为 <code>1</code>，最大值为 <code>port</code> 范围的三分之一。建议值为 <code>3</code>。</p>`,18);function O(I,P){const p=e("I18nTip"),t=e("RouterLink"),l=e("ExternalLinkIcon"),u=e("Badge");return i(),r("div",null,[s(p),q,n("p",null,[o("入站连接用于接收发来的数据，可用的协议请见"),s(t,{to:"/config/inbounds/"},{default:c(()=>[o("入站协议")]),_:1}),o("。")]),b,n("p",null,[o("支持填写 Unix domain socket，格式为绝对路径，形如 "),v,o("，可在开头加 "),m,o(" 代表 "),n("a",g,[o("abstract"),s(l)]),o("，"),f,o(" 则代表带 padding 的 abstract。")]),h,n("blockquote",null,[n("p",null,[y,o(": "),s(t,{to:"/config/transport.html#streamsettingsobject"},{default:c(()=>[o("StreamSettingsObject")]),_:1})])]),_,n("blockquote",null,[n("p",null,[j,o(": [string] "),s(u,{text:"WIP",type:"warning"})])]),x])}const w=d(k,[["render",O],["__file","inbound.html.vue"]]);export{w as default};
