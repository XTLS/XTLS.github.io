import{_ as n,r as a,o as i,c as r,a as d,b as t,d as e,e as h}from"./app-BClOOpdM.js";const p={},s=h('<h1 id="протокол-mux-cool" tabindex="-1"><a class="header-anchor" href="#протокол-mux-cool"><span>Протокол Mux.Cool</span></a></h1><p>Протокол Mux.Cool - это мультиплексирующий транспортный протокол, используемый для передачи нескольких независимых потоков данных по одному установленному потоку данных.</p><h2 id="версия" tabindex="-1"><a class="header-anchor" href="#версия"><span>Версия</span></a></h2><p>Текущая версия - 1 Beta.</p><h2 id="зависимости" tabindex="-1"><a class="header-anchor" href="#зависимости"><span>Зависимости</span></a></h2><h3 id="базовыи-протокол" tabindex="-1"><a class="header-anchor" href="#базовыи-протокол"><span>Базовый протокол</span></a></h3><p>Mux.Cool должен работать поверх установленного надежного потока данных.</p><h2 id="процесс-коммуникации" tabindex="-1"><a class="header-anchor" href="#процесс-коммуникации"><span>Процесс коммуникации</span></a></h2><p>Одно соединение Mux.Cool может передавать несколько подсоединений, каждое из которых имеет свой собственный идентификатор и состояние. Процесс передачи состоит из кадров (Frame), каждый из которых используется для передачи данных определенного подсоединения.</p><h3 id="поведение-клиента" tabindex="-1"><a class="header-anchor" href="#поведение-клиента"><span>Поведение клиента</span></a></h3><p>Когда требуется соединение и нет доступного существующего соединения, клиент инициирует новое соединение с сервером, которое далее называется &quot;главным соединением&quot;.</p><ol><li>Одно главное соединение может использоваться для отправки нескольких подсоединений. Клиент может самостоятельно определять количество подсоединений, которое может нести главное соединение.</li><li>Для нового подсоединения клиент должен отправить состояние <code>New</code>, чтобы уведомить сервер о создании подсоединения, а затем использовать состояние <code>Keep</code> для передачи данных.</li><li>Когда подсоединение завершается, клиент отправляет состояние <code>End</code>, чтобы уведомить сервер о закрытии подсоединения.</li><li>Клиент может самостоятельно решать, когда закрыть главное соединение, но должен убедиться, что сервер также поддерживает соединение.</li><li>Клиент может использовать состояние KeepAlive, чтобы предотвратить закрытие главного соединения сервером.</li></ol><h3 id="поведение-сервера" tabindex="-1"><a class="header-anchor" href="#поведение-сервера"><span>Поведение сервера</span></a></h3><p>Когда сервер получает новое подсоединение, он должен обрабатывать его как обычное соединение.</p><ol><li>При получении состояния <code>End</code> сервер может закрыть исходящее соединение с целевым адресом.</li><li>В ответе сервера для передачи данных подсоединения должен использоваться тот же идентификатор, что и в запросе.</li><li>Сервер не может использовать состояние <code>New</code>.</li><li>Сервер может использовать состояние KeepAlive, чтобы предотвратить закрытие главного соединения клиентом.</li></ol><h2 id="формат-передачи" tabindex="-1"><a class="header-anchor" href="#формат-передачи"><span>Формат передачи</span></a></h2><p>Mux.Cool использует симметричный формат передачи, то есть клиент и сервер отправляют и получают данные в одинаковом формате.</p><h3 id="формат-кадра" tabindex="-1"><a class="header-anchor" href="#формат-кадра"><span>Формат кадра</span></a></h3><table><thead><tr><th>2 байта</th><th>L байт</th><th>X байт</th></tr></thead><tbody><tr><td>Длина метаданных L</td><td>Метаданные</td><td>Дополнительные данные</td></tr></tbody></table><h3 id="метаданные" tabindex="-1"><a class="header-anchor" href="#метаданные"><span>Метаданные</span></a></h3><p>Существует несколько типов метаданных. Все типы метаданных содержат поля ID и Opt, которые означают следующее:</p>',21),c=t("li",null,"Для обычных подсоединений Mux ID начинается с 1 и увеличивается",-1),u={href:"https://github.com/XTLS/Xray-core/blob/main/common/xudp/xudp.go",target:"_blank",rel:"noopener noreferrer"},x=t("li",null,[e("Opt: "),t("ul",null,[t("li",null,"D(0x01): есть дополнительные данные")])],-1),b=h('<p>Если опция Opt(D) включена, формат дополнительных данных следующий:</p><table><thead><tr><th>2 байта</th><th>X-2 байта</th></tr></thead><tbody><tr><td>Длина X-2</td><td>Данные</td></tr></tbody></table><h3 id="создание-нового-подсоединения-new" tabindex="-1"><a class="header-anchor" href="#создание-нового-подсоединения-new"><span>Создание нового подсоединения (New)</span></a></h3><table><thead><tr><th>2 байта</th><th>1 байт</th><th>1 байт</th><th>1 байт</th><th>2 байта</th><th>1 байт</th><th>A байт</th><th>8 байт</th></tr></thead><tbody><tr><td>ID</td><td>0x01</td><td>Опция Opt</td><td>Тип сети N</td><td>Порт</td><td>Тип адреса T</td><td>Адрес A</td><td>Global ID (XUDP)</td></tr></tbody></table><p>Где:</p><ul><li>Тип сети N: <ul><li>0x01: TCP, указывает, что трафик текущего подсоединения должен быть отправлен на целевой адрес по TCP.</li><li>0x02: UDP, указывает, что трафик текущего подсоединения должен быть отправлен на целевой адрес по UDP.</li></ul></li><li>Тип адреса T: <ul><li>0x01: IPv4</li><li>0x02: доменное имя</li><li>0x03: IPv6</li></ul></li><li>Адрес A: <ul><li>Если T = 0x01, A - это 4-байтовый адрес IPv4;</li><li>Если T = 0x02, A - это 1 байт длины (L) + L байт доменного имени;</li><li>Если T = 0x03, A - это 16-байтовый адрес IPv6;</li></ul></li><li>Global ID (XUDP): <ul><li>Клиент вычисляет глобально уникальный идентификатор исходного кортежа UDP, который сервер использует, чтобы гарантировать, что при переподключении XUDP будет использоваться тот же порт для связи с целевым адресом.</li></ul></li></ul><p>При создании нового подсоединения, если Opt(D) включена, данные, переносимые этим кадром, должны быть отправлены на целевой хост.</p><h3 id="поддержание-подсоединения-keep" tabindex="-1"><a class="header-anchor" href="#поддержание-подсоединения-keep"><span>Поддержание подсоединения (Keep)</span></a></h3><p>TCP</p><table><thead><tr><th>2 байта</th><th>1 байт</th><th>1 байт</th></tr></thead><tbody><tr><td>ID</td><td>0x02</td><td>Опция Opt</td></tr></tbody></table><p>UDP</p><table><thead><tr><th>2 байта</th><th>1 байт</th><th>1 байт</th><th>1 байт</th><th>2 байта</th><th>1 байт</th><th>A байт</th></tr></thead><tbody><tr><td>ID</td><td>0x02</td><td>Опция Opt</td><td>Тип сети N</td><td>Порт</td><td>Тип адреса T</td><td>Адрес A</td></tr></tbody></table><p>При поддержании подсоединения, если Opt(D) включена, данные, переносимые этим кадром, должны быть отправлены на целевой хост. XUDP добавляет адрес UDP после Opt(D) в том же формате, что и при создании нового подсоединения, но без Global ID.</p><h3 id="закрытие-подсоединения-end" tabindex="-1"><a class="header-anchor" href="#закрытие-подсоединения-end"><span>Закрытие подсоединения (End)</span></a></h3><table><thead><tr><th>2 байта</th><th>1 байт</th><th>1 байт</th></tr></thead><tbody><tr><td>ID</td><td>0x03</td><td>Опция Opt</td></tr></tbody></table><p>При поддержании подсоединения, если Opt(D) включена, данные, переносимые этим кадром, должны быть отправлены на целевой хост.</p><h3 id="поддержание-соединения-keepalive" tabindex="-1"><a class="header-anchor" href="#поддержание-соединения-keepalive"><span>Поддержание соединения (KeepAlive)</span></a></h3><table><thead><tr><th>2 байта</th><th>1 байт</th><th>1 байт</th></tr></thead><tbody><tr><td>ID</td><td>0x04</td><td>Опция Opt</td></tr></tbody></table><p>При поддержании соединения:</p><ul><li>Если Opt(D) включена, данные, переносимые этим кадром, должны быть отброшены.</li><li>ID может быть случайным значением.</li></ul><h2 id="применение" tabindex="-1"><a class="header-anchor" href="#применение"><span>Применение</span></a></h2><p>Протокол Mux.Cool не зависит от базового протокола и теоретически может использовать любое надежное потоковое соединение для передачи данных протокола Mux.Cool.</p><p>В протоколах, ориентированных на целевой адрес, таких как Shadowsocks и VMess, при установлении соединения должен быть указан целевой адрес. Для обеспечения совместимости протокол Mux.Cool определяет адрес &quot;v1.mux.cool&quot;. То есть, если целевой адрес главного соединения совпадает с этим адресом, пересылка осуществляется в режиме Mux.Cool, в противном случае пересылка осуществляется традиционным способом. (Примечание: это внутренняя метка программы, VMess и VLESS не отправляют адрес &quot;v1.mux.cool&quot; в пакетах данных).</p>',23);function D(_,f){const l=a("I18nTip"),o=a("ExternalLinkIcon");return i(),r("div",null,[d(l),s,t("ul",null,[t("li",null,[e("ID: уникальный идентификатор подсоединения "),t("ul",null,[c,t("li",null,[e("Для "),t("a",u,[e("Single XUDP"),d(o)]),e(", реализованного в Xray, ID всегда равен 0")])])]),x]),b])}const m=n(p,[["render",D],["__file","muxcool.html.vue"]]);export{m as default};
