import{_ as c,r as s,o as p,c as i,a as t,b as o,d as e,w as a,e as l}from"./app-D0lKU3Y-.js";const d={},u=l(`<h1 id="dokodemo-door" tabindex="-1"><a class="header-anchor" href="#dokodemo-door"><span>Dokodemo-Door</span></a></h1><p>Dokodemo door (Anywhere Door) can listen to a local port and forward all incoming data on this port to a specified server&#39;s port, achieving the effect of port mapping.</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject"><span>InboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>The address to forward the traffic to. It can be an IP address like <code>&quot;1.2.3.4&quot;</code> or a domain name like <code>&quot;xray.com&quot;</code>. It is a string type.</p><p>When <code>followRedirect</code> (see below) is set to <code>true</code>, <code>address</code> can be empty.</p><blockquote><p><code>port</code>: number</p></blockquote><p>The specified port on the destination address to forward the traffic to. It should be in the range 1,655351,65535. It is a numeric value and is a required parameter.</p><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot; | &quot;tcp,udp&quot;</p></blockquote><p>The supported network protocol type. For example, when specified as <code>&quot;tcp&quot;</code>, it will only receive TCP traffic. The default value is <code>&quot;tcp&quot;</code>.</p><blockquote><p><code>timeout</code>: number</p></blockquote><p>The idle timeout in seconds. The default value is <code>300</code>. When handling a connection, if no data is transmitted within the timeout period, the connection will be terminated.</p><blockquote><p><code>followRedirect</code>: true | false</p></blockquote><p>When set to <code>true</code>, dokodemo-door will recognize data forwarded by iptables and forward it to the corresponding destination address.</p>`,15),h=o("code",null,"tproxy",-1),f=o("blockquote",null,[o("p",null,[o("code",null,"userLevel"),e(": number")])],-1),m=o("code",null,"userLevel",-1),k=o("code",null,"level",-1),b=o("h2",{id:"transparent-proxy-configuration-example",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#transparent-proxy-configuration-example"},[o("span",null,"Transparent Proxy Configuration Example")])],-1),q=o("p",null,[e("Please refer to the "),o("a",{href:"../../document/level-2/tproxy"},"Transparent Proxy (TProxy) Configuration Tutorial"),e(" for this section.")],-1);function v(_,g){const r=s("I18nTip"),n=s("RouterLink");return p(),i("div",null,[t(r),u,o("p",null,[e("Refer to the "),h,e(" setting in the "),t(n,{to:"/en/config/transport.html#sockoptobject"},{default:a(()=>[e("Transport Configuration")]),_:1}),e(" for more information.")]),f,o("p",null,[e("The user level that the connection will use to determine the corresponding "),t(n,{to:"/en/config/policy.html#levelpolicyobject"},{default:a(()=>[e("Local Policy")]),_:1}),e(".")]),o("p",null,[e("The value of "),m,e(" corresponds to the value of "),k,e(" in the "),t(n,{to:"/en/config/policy.html#policyobject"},{default:a(()=>[e("policy")]),_:1}),e(". If not specified, the default value is 0.")]),b,q])}const w=c(d,[["render",v],["__file","dokodemo.html.vue"]]);export{w as default};
