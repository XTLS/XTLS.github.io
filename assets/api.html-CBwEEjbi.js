import{_ as c,r as t,o as l,c as u,a,b as s,d as n,w as p,e as i}from"./app-BH6kgL7z.js";const d={},v=s("h1",{id:"api-接口",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#api-接口"},[s("span",null,"API 接口")])],-1),k={href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"},b=s("a",{href:"#%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE"},"相关配置",-1),h={href:"https://github.com/XTLS/Xray-core/releases/tag/v1.8.12",target:"_blank",rel:"noopener noreferrer"},m=i(`<div class="custom-container warning"><p class="custom-container-title">注意</p><p>大多数用户并不会用到此 API，新手可以直接忽略这一项。</p></div><h2 id="apiobject" tabindex="-1"><a class="header-anchor" href="#apiobject"><span>ApiObject</span></a></h2><p><code>ApiObject</code> 对应配置文件的 <code>api</code> 项。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:8080&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;services&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;HandlerService&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;LoggerService&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;StatsService&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;RoutingService&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>tag</code>: string</p></blockquote><p>出站代理标识。</p><blockquote><p><code>listen</code>: string</p></blockquote><p>API 服务监听的 IP 和端口。这是一个可选配置项。</p><p>省略这项时需要按照下面<a href="#%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE">相关配置</a>中的示例，添加 inbounds 和 routing 配置。</p><blockquote><p><code>services</code>: [string]</p></blockquote><p>开启的 API 列表，可选的值见 <a href="#%E6%94%AF%E6%8C%81%E7%9A%84-api-%E5%88%97%E8%A1%A8">API 列表</a>。</p><h2 id="相关配置" tabindex="-1"><a class="header-anchor" href="#相关配置"><span>相关配置</span></a></h2><p>可以在 inbounds 配置中增加一个 api 的 inbound</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">10085</span><span class="token punctuation">,</span>
    <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dokodemo-door&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在路由配置中增加针对 api inbound 的路由规则</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;inboundTag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;api&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;outboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在基础配置中增加 api</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;services&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;StatsService&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="支持的-api-列表" tabindex="-1"><a class="header-anchor" href="#支持的-api-列表"><span>支持的 API 列表</span></a></h2><h3 id="handlerservice" tabindex="-1"><a class="header-anchor" href="#handlerservice"><span>HandlerService</span></a></h3><p>一些对于入站出站代理进行修改的 API，可用的功能如下：</p><ul><li>添加一个新的入站代理；</li><li>添加一个新的出站代理；</li><li>删除一个现有的入站代理；</li><li>删除一个现有的出站代理；</li><li>在一个入站代理中添加一个用户（仅支持 VMess、VLESS、Trojan、Shadowsocks（v1.3.0+））；</li><li>在一个入站代理中删除一个用户（仅支持 VMess、VLESS、Trojan、Shadowsocks（v1.3.0+））；</li></ul><h3 id="routingservice" tabindex="-1"><a class="header-anchor" href="#routingservice"><span>RoutingService</span></a></h3><p>添加、删除、替换 routing 规则，查询均衡器统计信息的 API，可用的功能如下：</p><ul><li>adrules 添加、替换 routing 配置</li><li>rmrules 删除 routing 规则</li><li>sib 断开来源 IP 的连接</li><li>bi 查询均衡器统计信息</li><li>bo 强制均衡器选中指定的 outboundTag</li></ul><p>可以使用类似于 <code>./xray help api bi</code> 这样的命令来查询具体用法。</p><h3 id="loggerservice" tabindex="-1"><a class="header-anchor" href="#loggerservice"><span>LoggerService</span></a></h3><p>支持对内置 Logger 的重启，可配合 logrotate 进行一些对日志文件的操作。</p><h3 id="statsservice" tabindex="-1"><a class="header-anchor" href="#statsservice"><span>StatsService</span></a></h3>`,29),g=i(`<h3 id="reflectionservice" tabindex="-1"><a class="header-anchor" href="#reflectionservice"><span>ReflectionService</span></a></h3><p>支持 gRPC 客户端获取服务端的 API 列表。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ grpcurl <span class="token parameter variable">-plaintext</span> localhost:10085 list
grpc.reflection.v1alpha.ServerReflection
v2ray.core.app.proxyman.command.HandlerService
v2ray.core.app.stats.command.StatsService
xray.app.proxyman.command.HandlerService
xray.app.stats.command.StatsService
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-调用示例" tabindex="-1"><a class="header-anchor" href="#api-调用示例"><span>API 调用示例</span></a></h2>`,4),q={href:"https://github.com/XTLS/Xray-API-documents",target:"_blank",rel:"noopener noreferrer"};function f(_,y){const r=t("I18nTip"),e=t("ExternalLinkIcon"),o=t("RouterLink");return l(),u("div",null,[a(r),v,s("p",null,[n("API 接口配置提供了一些基于 "),s("a",k,[n("gRPC"),a(e)]),n("的 API 接口供远程调用。")]),s("p",null,[n("可以通过 api 配置模块开启接口。当 api 配置开启时，Xray 会自建一个和 tag 同名的出站代理，须手动将所有的 API 入站连接通过 "),a(o,{to:"/config/routing.html"},{default:p(()=>[n("路由规则配置")]),_:1}),n(" 指向这一出站代理。请参考本节中的 "),b,n("。")]),s("p",null,[s("a",h,[n("v1.8.12"),a(e)]),n(" 起支持简易配置模式，只配置 ApiObject 即可，不需要配置 inbounds 和 routing。但是使用简易配置时，流量统计功能不统计 API 入站连接的流量。")]),m,s("p",null,[n("内置的数据统计服务，详见 "),a(o,{to:"/config/stats.html"},{default:p(()=>[n("统计信息")]),_:1}),n("。")]),g,s("p",null,[s("a",q,[n("Xray-API-documents"),a(e)]),n(" @crossfw")])])}const x=c(d,[["render",f],["__file","api.html.vue"]]);export{x as default};
