import{_ as c,r as o,o as r,c as d,a,b as e,d as t,e as n}from"./app-mdDHIF5z.js";const l={},u=n(`<h1 id="httpupgrade" tabindex="-1"><a class="header-anchor" href="#httpupgrade"><span>HTTPUpgrade</span></a></h1><p>Это протокол, реализующий запросы и ответы на обновление HTTP 1.1, подобно WebSocket. Это позволяет ему, как и WebSocket, быть проксируемым CDN или Nginx, но без необходимости реализации других частей протокола WebSocket, что делает его более эффективным.</p><p>Его дизайн не рекомендуется для самостоятельного использования, а лучше всего работает в сочетании с TLS.</p><h2 id="httpupgradeobject" tabindex="-1"><a class="header-anchor" href="#httpupgradeobject"><span>HttpUpgradeObject</span></a></h2><p><code>HttpUpgradeObject</code> соответствует пункту <code>httpupgradeSettings</code> в настройках передачи.</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;acceptProxyProtocol&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xray.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>acceptProxyProtocol</code>: true | false</p></blockquote><p>Используется только для входящих соединений и указывает, принимать ли протокол PROXY.</p>`,8),i={href:"https://www.haproxy.org/download/2.2/doc/proxy-protocol.txt",target:"_blank",rel:"noopener noreferrer"},k=e("strong",null,"Если вы не знакомы с ним, проигнорируйте этот пункт.",-1),h=n("<p>Распространенные программы для reverse прокси (например, HAProxy, Nginx) и VLESS fallbacks xver могут быть настроены для его включения.</p><p>При установке значения <code>true</code>, после установления TCP-соединения на самом нижнем уровне, запрашивающая сторона должна сначала отправить PROXY protocol v1 или v2, в противном случае соединение будет закрыто.</p><blockquote><p><code>path</code>: string</p></blockquote><p>HTTP-путь, используемый HTTPUpgrade, по умолчанию <code>&quot;/&quot;</code>.</p><p>Если в пути клиента содержится параметр <code>ed</code> (например, <code>/mypath?ed=2560</code>), будет активирована функция <code>Early Data</code> для уменьшения задержки, ее значение - порог длины первого пакета. Если длина первого пакета превышает это значение, <code>Early Data</code> не будет активирована. Рекомендуемое значение - 2560.</p><blockquote><p><code>host</code>: string</p></blockquote><p>Хост, отправляемый в HTTP-запросе HTTPUpgrade, по умолчанию пустой. Если значение на стороне сервера пустое, значение хоста, отправляемое клиентом, не проверяется.</p><p>Когда на стороне сервера указано это значение или в <code>headers</code> указан хост, будет проверено соответствие хоста запроса клиента.</p><p>Приоритет выбора хоста, отправляемого клиентом: <code>host</code> &gt; <code>headers</code> &gt; <code>address</code></p><blockquote><p><code>headers</code>: map {string: string}</p></blockquote><p>Пользовательские HTTP-заголовки, пара ключ-значение, где каждый ключ представляет имя HTTP-заголовка, а соответствующее значение - строка.</p><p>По умолчанию пустое.</p>",12);function b(g,v){const s=o("I18nTip"),p=o("ExternalLinkIcon");return r(),d("div",null,[a(s),u,e("p",null,[e("a",i,[t("PROXY protocol"),a(p)]),t(" предназначен для передачи реального IP-адреса и порта запроса. "),k]),h])}const _=c(l,[["render",b],["__file","httpupgrade.html.vue"]]);export{_ as default};
